<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Qemu on ykikoqAq</title><link>https://ykiko.top/tags/qemu/</link><description>Recent content in Qemu on ykikoqAq</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 24 Jul 2020 22:47:12 +0800</lastBuildDate><atom:link href="https://ykiko.top/tags/qemu/index.xml" rel="self" type="application/rss+xml"/><item><title>WSL2开启kvm</title><link>https://ykiko.top/p/wsl2%E5%BC%80%E5%90%AFkvm/</link><pubDate>Fri, 24 Jul 2020 22:47:12 +0800</pubDate><guid>https://ykiko.top/p/wsl2%E5%BC%80%E5%90%AFkvm/</guid><description>&lt;h3 id="0x00-前言">0x00 前言&lt;/h3>
&lt;p>之前想着用wsl2去跑qemu，发现很多内核pwn题给的环境需要开启&lt;code>-enable-kvm&lt;/code>选项，还有自己编译的内核也没法，然而wsl2没法开启kvm，解决办法就是去把hype-v给关了，老老实实用vmware/vmbox开个虚拟机，这样每次都要切来切去很麻烦。&lt;/p>
&lt;p>直到看到vmware和vmbox都可以与hype-v并存，以为看到了曙光，没想到是没法开启虚拟化选项的。&lt;/p>
&lt;p>后来看到WSL上这个&lt;a class="link" href="https://github.com/microsoft/WSL/issues/4193" target="_blank" rel="noopener"
>Issues&lt;/a>，当时也没这么多评论，不过暂且能用&lt;a class="link" href="https://gist.github.com/offlinehacker/b1d96515f87a47bd0b0bea574eab5583" target="_blank" rel="noopener"
>脚本&lt;/a>实现。不过还是很麻烦。&lt;/p>
&lt;p>最后看了这篇&lt;a class="link" href="https://boxofcables.dev/accelerated-kvm-guests-on-wsl-2/" target="_blank" rel="noopener"
>文章&lt;/a>，跟着试了一遍，一直没报错，最后还是不行。某天又去看了看issuse，发现这个办法要最新阅览版。更新后一个新的发现就是wsl2速度明显变快了。。&lt;/p>
&lt;h3 id="0x01-环境">0x01 环境&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Windows 10 2004 20175.1000&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Windows Feature Experience Pack 120.18201.0.0&lt;/p>
&lt;/li>
&lt;li>
&lt;p>wsl2 - Ubuntu 20&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Intel i7-8550U&lt;/p>
&lt;/li>
&lt;li>
&lt;p>WSL-Linux-kernel: &lt;a class="link" href="https://github.com/microsoft/WSL2-Linux-Kernel/releases/tag/4.19.121-microsoft-standard" target="_blank" rel="noopener"
>4.19.121-microsoft-standard &lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>qemu 5.0&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x02-编译kernel">0x02 编译Kernel&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt -y install build-essential libncurses-dev bison flex libssl-dev libelf-dev cpu-checker qemu-kvm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar -xf WSL2-Linux-Kernel-4.19.121-microsoft-standard.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> WSL2-Linux-Kernel-4.19.104-microsoft-standard/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## cp Microsoft/config-wsl .config 有bug 使用最新版commit已修复&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make menuconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>.config&lt;/code>文件用&lt;a class="link" href="https://github.com/microsoft/WSL/files/4830946/config.txt" target="_blank" rel="noopener"
>这个&lt;/a> 或者&lt;a class="link" href="https://github.com/microhobby/WSL2-Linux-Kernel/blob/5e3fa9a98ea1ac05b397e0acd5bf08ce0e60bd3e/Microsoft/config-wsl" target="_blank" rel="noopener"
>这个&lt;/a>&lt;/p>
&lt;p>确保里面的选项kvm的选项。&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20200724222001.png"
loading="lazy"
>&lt;/p>
&lt;p>这里可选的编译为&amp;lt; M &amp;gt; 模块或者&amp;lt; * &amp;gt; 内置，建议内置吗模块的话后续每次重启都得自己加载一次。&lt;/p>
&lt;p>确保Linux guest support enable选项。&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20200724221933.png"
loading="lazy"
>&lt;/p>
&lt;p>退出保存。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">make -j8
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>waitting&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">cp arch/x86/boot/bzImage /mnt/c/Users/&amp;lt;username&amp;gt;/bzImage
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nano /mnt/c/Users/&amp;lt;username&amp;gt;/.wslconfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">### 如果是 &amp;lt;M&amp;gt; 模块编译&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo make modules_install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Toml" data-lang="Toml">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">wsl2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">nestedVirtualization&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">kernel&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="err">:\\&lt;/span>&lt;span class="nx">Users&lt;/span>&lt;span class="err">\\&amp;lt;&lt;/span>&lt;span class="nx">username&lt;/span>&lt;span class="err">&amp;gt;\\&lt;/span>&lt;span class="nx">bzImage&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">debugConsole&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="kc">true&lt;/span> &lt;span class="c">##可选&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">pageReporting&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="kc">true&lt;/span> &lt;span class="c">##可选&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">wsl.exe --shutdown Ubuntu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wsl.exe -d Ubuntu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nano /etc/modprobe.d/kvm-nested.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>mod加载的话还要写入：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">options kvm-intel &lt;span class="nv">nested&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">options kvm-intel &lt;span class="nv">enable_shadow_vmcs&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">options kvm-intel &lt;span class="nv">enable_apicv&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">options kvm-intel &lt;span class="nv">ept&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>之前模块编译的有bug版本的图 mount无法挂载。&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20200724214713.png"
loading="lazy"
>&lt;/p>
&lt;p>成功的图 可以挂载。。无需手动加载mod&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20200724223913.png"
loading="lazy"
>&lt;/p>
&lt;p>要先配置界面以及GPU支持可以参考这篇&lt;a class="link" href="https://boxofcables.dev/accelerated-kvm-guests-on-wsl-2/" target="_blank" rel="noopener"
>文章&lt;/a>后续的部分，没这个需求。。&lt;/p>
&lt;h3 id="issuse">issuse&lt;/h3>
&lt;p>还是会遇到奇奇怪怪的坑。&lt;/p>
&lt;p>&lt;code>An error occurred mounting one of your file systems. Please run 'dmesg' for more details.&lt;/code>&lt;/p>
&lt;p>报错信息：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 2.268879&lt;span class="o">]&lt;/span> init: &lt;span class="o">(&lt;/span>1&lt;span class="o">)&lt;/span> ERROR: MountPlan9WithRetry:282: mount drvfs on /mnt/c &lt;span class="o">(&lt;/span>&lt;span class="nv">cache&lt;/span>&lt;span class="o">=&lt;/span>mmap,noatime,msize&lt;span class="o">=&lt;/span>262144,trans&lt;span class="o">=&lt;/span>virtio,aname&lt;span class="o">=&lt;/span>drvfs&lt;span class="p">;&lt;/span>&lt;span class="nv">path&lt;/span>&lt;span class="o">=&lt;/span>C:&lt;span class="se">\;&lt;/span>&lt;span class="nv">uid&lt;/span>&lt;span class="o">=&lt;/span>0&lt;span class="p">;&lt;/span>&lt;span class="nv">gid&lt;/span>&lt;span class="o">=&lt;/span>0&lt;span class="p">;&lt;/span>&lt;span class="nv">symlinkroot&lt;/span>&lt;span class="o">=&lt;/span>/mnt/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 2.268880&lt;span class="o">]&lt;/span> &lt;span class="o">)&lt;/span> failed: &lt;span class="m">22&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 2.277772&lt;span class="o">]&lt;/span> 9pnet: Could not find request transport: virtio
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 2.280962&lt;span class="o">]&lt;/span> init: &lt;span class="o">(&lt;/span>1&lt;span class="o">)&lt;/span> ERROR: MountPlan9WithRetry:282: mount drvfs on /mnt/d &lt;span class="o">(&lt;/span>&lt;span class="nv">cache&lt;/span>&lt;span class="o">=&lt;/span>mmap,noatime,msize&lt;span class="o">=&lt;/span>262144,trans&lt;span class="o">=&lt;/span>virtio,aname&lt;span class="o">=&lt;/span>drvfs&lt;span class="p">;&lt;/span>&lt;span class="nv">path&lt;/span>&lt;span class="o">=&lt;/span>D:&lt;span class="se">\;&lt;/span>&lt;span class="nv">uid&lt;/span>&lt;span class="o">=&lt;/span>0&lt;span class="p">;&lt;/span>&lt;span class="nv">gid&lt;/span>&lt;span class="o">=&lt;/span>0&lt;span class="p">;&lt;/span>&lt;span class="nv">symlinkroot&lt;/span>&lt;span class="o">=&lt;/span>/mnt/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 2.280964&lt;span class="o">]&lt;/span> &lt;span class="o">)&lt;/span> failed: &lt;span class="m">22&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 2.305491&lt;span class="o">]&lt;/span> init: &lt;span class="o">(&lt;/span>8&lt;span class="o">)&lt;/span> ERROR: CreateProcessParseCommon:874: Failed to translate D:&lt;span class="se">\o&lt;/span>penSRC&lt;span class="se">\W&lt;/span>SL2-Linux-Kernel-4.19.121-microsoft-standard
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 2.312584&lt;span class="o">]&lt;/span> init: &lt;span class="o">(&lt;/span>8&lt;span class="o">)&lt;/span> ERROR: UtilTranslatePathList:2624: Failed to translate D:&lt;span class="se">\L&lt;/span>ife_Tools&lt;span class="se">\S&lt;/span>ys_Tools&lt;span class="se">\c&lt;/span>mder&lt;span class="se">\b&lt;/span>in
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> 2.319445&lt;span class="o">]&lt;/span> init: &lt;span class="o">(&lt;/span>8&lt;span class="o">)&lt;/span> ERROR: UtilTranslatePathList:2624: Failed to translate D:&lt;span class="se">\L&lt;/span>ife_Tools&lt;span class="se">\S&lt;/span>ys_Tools&lt;span class="se">\c&lt;/span>mder&lt;span class="se">\v&lt;/span>endor&lt;span class="se">\b&lt;/span>in
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这是内核的问题，很坑的地方。是官网没切换新的config文件造成的，换成新的重新编译即可。具体看着这个&lt;a class="link" href="https://github.com/microsoft/WSL/issues/5481" target="_blank" rel="noopener"
>issuse&lt;/a> &lt;a class="link" href="https://github.com/microsoft/WSL2-Linux-Kernel/pull/146/commits/5e3fa9a98ea1ac05b397e0acd5bf08ce0e60bd3e" target="_blank" rel="noopener"
>修复&lt;/a>&lt;/p>
&lt;p>重新编译内核。&lt;/p>
&lt;h4 id="参考">参考&lt;/h4>
&lt;ul>
&lt;li>&lt;a class="link" href="https://boxofcables.dev/accelerated-kvm-guests-on-wsl-2/" target="_blank" rel="noopener"
>https://boxofcables.dev/accelerated-kvm-guests-on-wsl-2/&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/microsoft/WSL/issues/4193" target="_blank" rel="noopener"
>https://github.com/microsoft/WSL/issues/4193&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Qemu+gdb调试Linux内核</title><link>https://ykiko.top/p/qemu-gdb%E8%B0%83%E8%AF%95linux%E5%86%85%E6%A0%B8/</link><pubDate>Wed, 28 Aug 2019 23:24:18 +0800</pubDate><guid>https://ykiko.top/p/qemu-gdb%E8%B0%83%E8%AF%95linux%E5%86%85%E6%A0%B8/</guid><description>&lt;h3 id="前言">前言&lt;/h3>
&lt;p>调试Linux内核可以使用VM双机调试，不过使用qemu来调试会更加方便。&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;h4 id="编译源码">编译源码&lt;/h4>
&lt;p>首先到Linux &lt;a class="link" href="https://mirrors.edge.kernel.org/pub/linux/kernel/v4.x/" target="_blank" rel="noopener"
>FTP仓库&lt;/a>或者&lt;a class="link" href="https://www.kernel.org/" target="_blank" rel="noopener"
>官网&lt;/a>下载对应版本的源码。&lt;/p>
&lt;p>这里下载的是&lt;code>linux-4.10.10&lt;/code>&lt;/p>
&lt;p>解压&lt;code>tar -xvJf linux-4.10.10.tar.xz&lt;/code>&lt;/p>
&lt;p>安装依赖&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> sudo apt install build-essential ncurses-dev xz-utils libssl-dev bc fakeroot aptitude libncurses5-dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​ sudo apt install qemu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="编译内核">编译内核&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> make menuconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://my-md.oss-cn-shenzhen.aliyuncs.com/20190828152106.png"
loading="lazy"
>&lt;/p>
&lt;p>进行配置：&lt;code>KernelHacking&lt;/code> —&amp;gt; &lt;code>Compile-time checks and compiler options&lt;/code>选中&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Compile the kernel with debug info
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Compile the kernel with frame pointers
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Provide GDB scripts for kernel debugging
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Processor type and features→去掉Paravirtualized guest support
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>保存退出。&lt;/p>
&lt;p>命令&lt;code>make -jN&lt;/code> 进行编译&lt;/p>
&lt;p>之后&lt;code>make all&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">make modules
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>编译完成之后，&lt;code>vmlinux&lt;/code>在源码根目录、&lt;code>bzImage&lt;/code>在&lt;code>./arch/x86/boot/&lt;/code>下&lt;/p>
&lt;h4 id="构建initramfs根文件系统">构建initramfs根文件系统&lt;/h4>
&lt;p>借助BusyBox构建极简initramfs，busybox最新版&lt;a class="link" href="https://busybox.net/downloads/" target="_blank" rel="noopener"
>下载地址&lt;/a>&lt;/p>
&lt;p>编译静态版Busybox&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">make menuconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://my-md.oss-cn-shenzhen.aliyuncs.com/20190828160608.png"
loading="lazy"
>&lt;/p>
&lt;p>设置以下选项：&lt;/p>
&lt;p>Settings -&amp;gt; Build Options -&amp;gt; Build static binary (no shared libs) 编译成静态文件&lt;/p>
&lt;p>开始编译：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">make -jN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>等待编译完成源码目录下出现&lt;code>_install&lt;/code>目录，进行配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">cd&lt;/span> _install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​ mkdir proc sys dev etc etc/init.d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​ vim etc/init.d/rcS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​ &lt;span class="se">\#&lt;/span> 文件中的内容如下
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​ &lt;span class="se">\#&lt;/span> &lt;span class="c1">#!/bin/sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​ &lt;span class="se">\#&lt;/span> mount -t proc none /proc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​ &lt;span class="se">\#&lt;/span> mount -t sysfs none /sys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​ &lt;span class="se">\#&lt;/span> /sbin/mdev -s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​ chmod +x etc/init.d/rcS
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>创建文件系统&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">find . &lt;span class="p">|&lt;/span> cpio -o --format&lt;span class="o">=&lt;/span>newc &amp;gt; ../rootfs.img
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="运行内核">运行内核&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> qemu-system-x86_64 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​ -kernel ~/linux-4.10.10/arch/x86_64/boot/bzImage &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​ -initrd ~/busybox-1.31.0/rootfs.img &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​ -append &lt;span class="s2">&amp;#34;console=ttyS0 root=/dev/ram rdinit=/sbin/init&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​ -cpu kvm64,+smep,+smap &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​ -nographic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​ -gdb tcp::1234
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>**&lt;code>-**cpu kvm64,**+**smep,**+**smap&lt;/code> 设置CPU的安全选项，这里开启了smap和smep&lt;/p>
&lt;p>**&lt;code>-**kernel&lt;/code> 设置内核bzImage文件的路径&lt;/p>
&lt;p>**&lt;code>-**initrd&lt;/code> 设置刚才利用busybox创建的rootfs.img，作为内核启动的文件系统&lt;/p>
&lt;p>**&lt;code>-**gdb tcp::1234&lt;/code> 设置gdb的调试端口为1234 在GDB中通过 target remote localhist:1234进行连接&lt;/p>
&lt;h4 id="驱动">驱动&lt;/h4>
&lt;p>&lt;code>insmod&lt;/code> 加载驱动&lt;/p>
&lt;p>&lt;code>rmmod&lt;/code> 卸载驱动&lt;/p>
&lt;p>&lt;code>lsmod&lt;/code> 查看加载了的驱动&lt;/p>
&lt;h3 id="调试测试">调试测试&lt;/h3>
&lt;p>qemu启动，启动后的界面&lt;/p>
&lt;p>&lt;img src="https://my-md.oss-cn-shenzhen.aliyuncs.com/20190828162012.png"
loading="lazy"
>&lt;/p>
&lt;p>启动GDB&lt;/p>
&lt;p>&lt;img src="https://my-md.oss-cn-shenzhen.aliyuncs.com/20190828164008.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://my-md.oss-cn-shenzhen.aliyuncs.com/20190828164103.png"
loading="lazy"
>&lt;/p>
&lt;p>使用内核提供的GDB辅助调试功能：(gdb)apropos lx&lt;/p>
&lt;p>调试内核模块：add-symbol-file 添加模块文件&lt;/p>
&lt;p>断点测试 &lt;code>b cmdline_proc_show&lt;/code>&lt;/p>
&lt;p>&lt;code>cat /proc/cmdline&lt;/code> 触发断点&lt;/p>
&lt;h3 id="引用">引用&lt;/h3></description></item></channel></rss>