<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on ykikoqAq</title><link>https://ykiko.top/tags/linux/</link><description>Recent content in Linux on ykikoqAq</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 28 Aug 2019 00:00:00 +0800</lastBuildDate><atom:link href="https://ykiko.top/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>qemu+gdb调试Linux内核</title><link>https://ykiko.top/p/qemu-gdb%E8%B0%83%E8%AF%95linux%E5%86%85%E6%A0%B8/</link><pubDate>Wed, 28 Aug 2019 00:00:00 +0800</pubDate><guid>https://ykiko.top/p/qemu-gdb%E8%B0%83%E8%AF%95linux%E5%86%85%E6%A0%B8/</guid><description>&lt;h1 id="qemugdb调试linux内核">qemu+gdb调试Linux内核&lt;/h1>
&lt;h3 id="前言">前言&lt;/h3>
&lt;p>调试Linux内核可以使用VM双机调试，不过使用qemu来调试会更加方便。&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;h3 id="编译源码">编译源码&lt;/h3>
&lt;p>首先到Linux &lt;a class="link" href="https://mirrors.edge.kernel.org/pub/linux/kernel/v4.x/" target="_blank" rel="noopener"
>FTP仓库&lt;/a>或者&lt;a class="link" href="https://www.kernel.org/" target="_blank" rel="noopener"
>官网&lt;/a>下载对应版本的源码。&lt;/p>
&lt;p>这里下载的是&lt;code>linux-4.10.10&lt;/code>&lt;/p>
&lt;p>解压&lt;code>tar -xvJf linux-4.10.10.tar.xz&lt;/code>&lt;/p>
&lt;p>安装依赖&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">sudo apt install build-essential ncurses-dev xz-utils libssl-dev bc fakeroot aptitude libncurses5-dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install qemu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="编译内核">编译内核&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl"> make menuconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://my-md.oss-cn-shenzhen.aliyuncs.com/20190828152106.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>进行配置：&lt;code>KernelHacking&lt;/code> —&amp;gt; &lt;code>Compile-time checks and compiler options&lt;/code>选中&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">Compile the kernel with debug info
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">Compile the kernel with frame pointers
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">Provide GDB scripts for kernel debugging
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">Processor type and features→去掉Paravirtualized guest support
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>保存退出。&lt;/p>
&lt;p>命令&lt;code>make -jN&lt;/code> 进行编译&lt;/p>
&lt;p>之后&lt;code>make all&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">make modules
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>编译完成之后，&lt;code>vmlinux&lt;/code>在源码根目录、&lt;code>bzImage&lt;/code>在&lt;code>./arch/x86/boot/&lt;/code>下&lt;/p>
&lt;h3 id="构建initramfs根文件系统">构建initramfs根文件系统&lt;/h3>
&lt;p>借助BusyBox构建极简initramfs，busybox最新版&lt;a class="link" href="https://busybox.net/downloads/" target="_blank" rel="noopener"
>下载地址&lt;/a>&lt;/p>
&lt;p>编译静态版Busybox&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">make menuconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://my-md.oss-cn-shenzhen.aliyuncs.com/20190828160608.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>设置以下选项：&lt;/p>
&lt;p>Settings -&amp;gt; Build Options -&amp;gt; Build static binary (no shared libs) 编译成静态文件&lt;/p>
&lt;p>开始编译：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">make -jNmake install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>等待编译完成源码目录下出现&lt;code>_install&lt;/code>目录，进行配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> _install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mkdir proc sys dev etc etc/init.d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> vim etc/init.d/rcS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="se">\#&lt;/span> 文件中的内容如下
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="se">\#&lt;/span> &lt;span class="c1">#!/bin/sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="se">\#&lt;/span> mount -t proc none /proc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="se">\#&lt;/span> mount -t sysfs none /sys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="se">\#&lt;/span> /sbin/mdev -s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> chmod +x etc/init.d/rcS
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>创建文件系统&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">find . &lt;span class="p">|&lt;/span> cpio -o --format&lt;span class="o">=&lt;/span>newc &amp;gt; ../rootfs.img
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="运行内核">运行内核&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">qemu-system-x86_64 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -kernel ~/linux-4.10.10/arch/x86_64/boot/bzImage &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -initrd ~/busybox-1.31.0/rootfs.img &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -append &lt;span class="s2">&amp;#34;console=ttyS0 root=/dev/ram rdinit=/sbin/init&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -cpu kvm64,+smep,+smap &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -nographic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -gdb tcp::1234
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;code>cpu kvm64,+smep,+smap&lt;/code> 设置CPU的安全选项，这里开启了smap和smep&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>kernel&lt;/code> 设置内核bzImage文件的路径&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>initrd&lt;/code> 设置刚才利用busybox创建的rootfs.img，作为内核启动的文件系统&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>gdb tcp::1234&lt;/code> 设置gdb的调试端口为1234 在GDB中通过 target remote localhist:1234进行连接&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="驱动">驱动&lt;/h3>
&lt;p>&lt;code>insmod&lt;/code> 加载驱动&lt;/p>
&lt;p>&lt;code>rmmod&lt;/code> 卸载驱动&lt;/p>
&lt;p>&lt;code>lsmod&lt;/code> 查看加载了的驱动&lt;/p>
&lt;h3 id="调试测试">调试测试&lt;/h3>
&lt;p>qemu启动，启动后的界面&lt;/p>
&lt;p>&lt;img src="https://my-md.oss-cn-shenzhen.aliyuncs.com/20190828162012.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>启动GDB&lt;/p>
&lt;p>&lt;img src="https://my-md.oss-cn-shenzhen.aliyuncs.com/20190828164008.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="https://my-md.oss-cn-shenzhen.aliyuncs.com/20190828164103.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>使用内核提供的GDB辅助调试功能：(gdb)apropos lx&lt;/p>
&lt;p>调试内核模块：add-symbol-file 添加模块文件&lt;/p>
&lt;p>断点测试 &lt;code>b cmdline_proc_show&lt;/code>&lt;/p>
&lt;p>&lt;code>cat /proc/cmdline&lt;/code> 触发断点&lt;/p>
&lt;h3 id="引用">引用&lt;/h3></description></item></channel></rss>