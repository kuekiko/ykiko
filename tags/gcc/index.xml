<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GCC on ykikoqAq</title><link>https://ykiko.top/tags/gcc/</link><description>Recent content in GCC on ykikoqAq</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 22 Oct 2018 20:39:26 +0800</lastBuildDate><atom:link href="https://ykiko.top/tags/gcc/index.xml" rel="self" type="application/rss+xml"/><item><title>PWN 小tools的使用</title><link>https://ykiko.top/p/pwn-%E5%B0%8Ftools%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Mon, 22 Oct 2018 20:39:26 +0800</pubDate><guid>https://ykiko.top/p/pwn-%E5%B0%8Ftools%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>&lt;h3 id="gcc-编译常用命令">GCC 编译常用命令&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">不带选项&lt;/th>
&lt;th>&lt;/th>
&lt;th>gcc test.c 将test.c预处理、汇编、编译并链接形成可执行文件。这里未指定输出文件，默认输出为a.out。&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">-o&lt;/td>
&lt;td>指定生成的输出文件；&lt;/td>
&lt;td>gcc test.c -o test 将test.c预处理、汇编、编译并链接形成可执行文件test。-o选项用来指定输出文件的文件名。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-E&lt;/td>
&lt;td>仅执行编译预处理；&lt;/td>
&lt;td>gcc -E test.c -o test.i 将test.c预处理输出test.i文件。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-S&lt;/td>
&lt;td>将C代码转换为汇编代码；&lt;/td>
&lt;td>gcc -S test.i 将预处理输出文件test.i汇编成test.s文件。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-c&lt;/td>
&lt;td>仅执行编译操作，不进行连接操作。&lt;/td>
&lt;td>gcc -c test.s 将汇编输出文件test.s编译输出test.o文件。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-wall&lt;/td>
&lt;td>显示警告信息；&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;strong>无选项链接&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>gcc test.o -o test 将编译输出文件test.o链接成最终可执行文件test。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-O&lt;/td>
&lt;td>使用编译优化级别1编译程序。级别为1~3，级别越大优化效果越好，但编译时间越长&lt;/td>
&lt;td>gcc -O1 test.c -o test&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;/td>
&lt;td>关掉DEP/NX（堆栈不可执行）&lt;/td>
&lt;td>gcc -z execstack -o level level.c&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;/td>
&lt;td>关掉Stack Protector/Canary（栈保护）&lt;/td>
&lt;td>gcc -fno-stack-protector -o level level.c&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;/td>
&lt;td>关掉程序ASLR/PIE（程序随机化保护）&lt;/td>
&lt;td>gcc -no-pie level level.c&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;/td>
&lt;td>64位linux下面的GCC编译出一个32位可执行程序&lt;/td>
&lt;td>gcc -m32 -z execstack -fno-stack-protector -o level level.c&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="gdb常用调试命令">GDB常用调试命令&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-C" data-lang="C">&lt;span class="line">&lt;span class="cl">&lt;span class="n">gcc&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">g&lt;/span> &lt;span class="n">main&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="c1">//在目标文件加入源代码的信息
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">gdb&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">out&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="c1">//开始调试
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="c1">//一条一条执行
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">step&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="c1">//执行下一条，如果函数进入函数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">backtrace&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">bt&lt;/span> &lt;span class="c1">//查看函数调用栈帧
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="n">locals&lt;/span> &lt;span class="c1">//查看当前栈帧局部变量
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">frame&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">f&lt;/span> &lt;span class="c1">//选择栈帧，再查看局部变量
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">print&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="c1">//打印变量的值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">finish&lt;/span> &lt;span class="c1">//运行到当前函数返回
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">set&lt;/span> &lt;span class="n">var&lt;/span> &lt;span class="n">sum&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="c1">//修改变量值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">list&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">l&lt;/span> &lt;span class="err">行号或函数名&lt;/span> &lt;span class="c1">//列出源码
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">display&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">undisplay&lt;/span> &lt;span class="n">sum&lt;/span> &lt;span class="c1">//每次停下显示变量的值/取消跟踪
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="err">行号或函数名&lt;/span> &lt;span class="c1">//设置断点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">continue&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="c1">//连续运行
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="n">breakpoints&lt;/span> &lt;span class="c1">//查看已经设置的断点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">delete&lt;/span> &lt;span class="n">breakpoints&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="c1">//删除某个断点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">disable&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">enable&lt;/span> &lt;span class="n">breakpoints&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="c1">//禁用/启用某个断点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">break&lt;/span> &lt;span class="mi">9&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">sum&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="c1">//满足条件才激活断点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">run&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">r&lt;/span> &lt;span class="c1">//重新从程序开头连续执行
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">watch&lt;/span> &lt;span class="n">input&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1">//设置观察点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="n">watchpoints&lt;/span> &lt;span class="c1">//查看设置的观察点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="n">input&lt;/span> &lt;span class="c1">//打印存储器内容，b--每个字节一组，7--7组
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">disassemble&lt;/span> &lt;span class="c1">//反汇编当前函数或指定函数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">si&lt;/span> &lt;span class="c1">// 一条指令一条指令调试 而 s 是一行一行代码
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">info&lt;/span> &lt;span class="n">registers&lt;/span> &lt;span class="c1">// 显示所有寄存器的当前值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">20&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="n">esp&lt;/span> &lt;span class="c1">//查看内存中开始的20个数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">ni&lt;/span> &lt;span class="err">单步执行不进入&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">si&lt;/span> &lt;span class="err">单步执行并进入&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">disas&lt;/span> &lt;span class="n">addr&lt;/span> &lt;span class="err">对地址&lt;/span>&lt;span class="n">addr处的指令进行反汇编&lt;/span>&lt;span class="err">，&lt;/span>&lt;span class="n">addr可以是函数名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">checksec&lt;/span> &lt;span class="err">查看&lt;/span>&lt;span class="n">elf编译的保护选项&lt;/span>&lt;span class="err">。&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="查壳">查壳&lt;/h4>
&lt;blockquote>
&lt;p>upx -d file&lt;/p>
&lt;/blockquote>
&lt;h4 id="objjump">objjump&lt;/h4>
&lt;blockquote>
&lt;p>objdump是二进制文件快速查看工具。 常用命令：&lt;/p>
&lt;ol>
&lt;li>&lt;code>objdump -d [file]&lt;/code> 查看文件的所有汇编代码&lt;/li>
&lt;li>&lt;code>objdump -f [file]&lt;/code> 查看文件的每个文件的整体头部摘要&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>####python&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>&lt;code>python -c &amp;quot;...&amp;quot; | ./file&lt;/code> python以命令方式执行并把结果传递给file&lt;/li>
&lt;li>&lt;code>python -c &amp;quot;...&amp;quot; | xargs ./file&lt;/code> python以命令方式执行并当作命令行参数传递给file，具体的是：“它的作用是将参数列表转换成小块分段传递给其他命令，以避免参数列表过长的问题。”存在这个命令是因为很多的参数不支持以管道的方式传递。&lt;/li>
&lt;li>&lt;code>os.system()&lt;/code> 创建一个子进程&lt;/li>
&lt;li>&lt;code>os.putenv(&amp;quot;name&amp;quot;, &amp;quot;value&amp;quot;)&lt;/code> 添加一个环境变量&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;h4 id="pwntools">pwntools&lt;/h4>
&lt;blockquote>
&lt;p>参考
&lt;a class="link" href="http://pwntools.readthedocs.io/en/stable/" target="_blank" rel="noopener"
>http://pwntools.readthedocs.io/en/stable/&lt;/a> （官网介绍）&lt;/p>
&lt;p>&lt;a class="link" href="http://brieflyx.me/2015/python-module/pwntools-intro/" target="_blank" rel="noopener"
>http://brieflyx.me/2015/python-module/pwntools-intro/&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="http://brieflyx.me/2015/python-module/pwntools-advanced/" target="_blank" rel="noopener"
>http://brieflyx.me/2015/python-module/pwntools-advanced/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>一般直接用from pwn import * 或者import pwn将所有模块导入到当前命名空间，这条语句还会把os、sys等常用的系统库一并导入。&lt;/p>
&lt;p>常用的模块有下面几个：
- ==asm==:汇编与反汇编
- ==dynelf==:用于远程符号泄露，需要提供leak方法
- ==elf==:对elf文件进行操作
- ==gdb==:配合gdb进行调试
- ==memleak==:用于内存泄漏
- ==shellcraft==: shellcode的生成器
- ==tubes==:包括tubes: 包括tubes.sock, tubes.process, tubes.ssh, tubes.serialtube，分别适用于不同场景的PIPE
- ==utils==:一些实用的小功能，例如CRC计算，cyclic pattern等&lt;/p>
&lt;/blockquote>
&lt;h4 id="pwndbg">pwndbg&lt;/h4>
&lt;ul>
&lt;li>arena 堆检查&lt;/li>
&lt;li>mp 显示堆&lt;/li>
&lt;li>bins,fastbins,unsorted,smallbins,largebins&lt;/li>
&lt;li>heap&lt;/li>
&lt;li>top_chunk&lt;/li>
&lt;li>procinfo 查看当前进程状态&lt;/li>
&lt;li>rop &lt;code>rop --grep &amp;quot;pop rdi&amp;quot; -- --nojop --nosys --depth 2&lt;/code>&lt;/li>
&lt;li>search &lt;code>search -s “/bin/sh”&lt;/code>&lt;/li>
&lt;li>vvmap 虚拟内存映射&lt;/li>
&lt;li>telescope 检查内存转储&lt;/li>
&lt;/ul></description></item></channel></rss>