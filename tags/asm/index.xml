<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ASM on ykikoqAq</title><link>https://ykiko.top/tags/asm/</link><description>Recent content in ASM on ykikoqAq</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 10 Oct 2018 00:00:00 +0800</lastBuildDate><atom:link href="https://ykiko.top/tags/asm/index.xml" rel="self" type="application/rss+xml"/><item><title>Android-ARM进阶</title><link>https://ykiko.top/p/android-arm%E8%BF%9B%E9%98%B6/</link><pubDate>Wed, 10 Oct 2018 00:00:00 +0800</pubDate><guid>https://ykiko.top/p/android-arm%E8%BF%9B%E9%98%B6/</guid><description>&lt;h1 id="android-arm进阶">Android-ARM进阶&lt;/h1>
&lt;p>学习一些关于ARM的汇编结构特点，以及分析。理解一些结构最好的方法就是多去尝试动手做。。&lt;/p>
&lt;h3 id="ndk-build的使用">NDK-Build的使用&lt;/h3>
&lt;p>可以参考&lt;a class="link" href="https://developer.android.com/ndk/guides/ndk-build?hl=zh-cn" target="_blank" rel="noopener"
>官方文档&lt;/a>。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>创建一个Android项目&lt;/p>
&lt;/li>
&lt;li>
&lt;p>cd 项目目录&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/ndk-build 。也可以将NDK-build加入环境变量。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>创建jni文件夹，添加 Android.mk和 Application.mk两个文件。（参考官方文档）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">//Android.mk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">LOCAL_PATH := $(call my-dir)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">include $(CLEAR_VARS)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 要生成的.so库名称
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">LOCAL_MODULE := hello
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># c++文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">LOCAL_SRC_FILES := hello.cpp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">include $(BUILD_SHARED_LIBRARY)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">//Application.mk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">APP_PLATFORM := android-17
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># APP_ABI := all
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">APP_ABI :=armeabi-v7a arm64-v8a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>添加hello.cpp：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&amp;lt;cstdio&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* code */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hello,world!&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;num value is %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>ndk-build&lt;/code>&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20180814152220.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>push 到Android设备运行&lt;/p>
&lt;p>这里ARM32位出现里非法引用（Illegal instruction）。。之后再试试&lt;/p>
&lt;p>改成ARM64之后又出现内存区段错误“Segmentation fault” 有毒呀。。可能是哪里设置有问题。。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="arm-linux-gcc交叉编译器编译">arm-linux-gcc交叉编译器编译&lt;/h3>
&lt;p>arm-linux-gcc也能编译出ARM可执行文件。&lt;code>sudo apt install g++-arm-linux-gnueabihf&lt;/code>&lt;/p>
&lt;p>或者下载&lt;a class="link" href="https://developer.arm.com/open-source/gnu-toolchain/gnu-rm/downloads" target="_blank" rel="noopener"
>二进制&lt;/a>文件安装。&lt;/p>
&lt;p>&lt;code>arm-linux-gnueabihf-g++  -static  helloworld.cpp&lt;/code>&lt;/p>
&lt;p>push进Android之后运行成功&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20180814164353.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>使用这个方法和用NDK-build编译的有差异。&lt;/p>
&lt;h3 id="for循环">for循环&lt;/h3>
&lt;p>待添加&lt;/p>
&lt;h3 id="if-else">if-else&lt;/h3>
&lt;p>待添加&lt;/p>
&lt;h3 id="while">while&lt;/h3>
&lt;h3 id="switch">switch&lt;/h3>
&lt;h3 id="优化">优化&lt;/h3>
&lt;p>###C++&lt;/p>
&lt;h3 id="jni-api分析">JNI API分析&lt;/h3>
&lt;p>//Android.mk
LOCAL_PATH := $(call my-dir)
include $(CLEAR_VARS)&lt;/p>
&lt;p>&lt;em># 要生成的.so库名称&lt;/em>&lt;/p>
&lt;p>LOCAL_MODULE := hello&lt;/p>
&lt;p>&lt;em># c++文件&lt;/em>&lt;/p>
&lt;p>LOCAL_SRC_FILES := hello.cpp
include $(BUILD_SHARED_LIBRARY)&lt;/p></description></item></channel></rss>