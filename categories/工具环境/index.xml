<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>工具环境 on ykikoqAq</title><link>https://ykiko.top/categories/%E5%B7%A5%E5%85%B7%E7%8E%AF%E5%A2%83/</link><description>Recent content in 工具环境 on ykikoqAq</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 16 Jun 2019 00:12:44 +0800</lastBuildDate><atom:link href="https://ykiko.top/categories/%E5%B7%A5%E5%85%B7%E7%8E%AF%E5%A2%83/index.xml" rel="self" type="application/rss+xml"/><item><title>MobSecVM</title><link>https://ykiko.top/p/mobsecvm/</link><pubDate>Sun, 16 Jun 2019 00:12:44 +0800</pubDate><guid>https://ykiko.top/p/mobsecvm/</guid><description>&lt;h3 id="0x00-前言">0x00 前言&lt;/h3>
&lt;p>最近不知为何VM-Ubuntu炸了，试了各种方法，折腾了很久之后，终于恢复了。又浪费时间和环境斗志斗勇。自此打算自己弄一个包含了Android安全所需各种工具的环境，做个备份。防止哪天又出各种各样的问题。&lt;/p>
&lt;p>项目地址：&lt;a class="link" href="" >MobSecVM&lt;/a>&lt;/p>
&lt;p>下载地址：&lt;a class="link" href="" >baiduyun&lt;/a>、&lt;a class="link" href="" >google_yun&lt;/a>&lt;/p>
&lt;h3 id="0x01-环境准备">0x01 环境准备&lt;/h3>
&lt;ul>
&lt;li>Ubuntu 18.04 LTS&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Username：mobsec&lt;/p>
&lt;p>Password：mobsec&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>Vmware 15&lt;/li>
&lt;/ul>
&lt;h3 id="0x02-tools-不断补充">0x02 Tools （不断补充）&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;input checked="" disabled="" type="checkbox"> &lt;a class="link" href="http://developer.android.com/tools/studio/index.html" target="_blank" rel="noopener"
>AndroidStudio&lt;/a> 开发全家桶带模拟器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;input checked="" disabled="" type="checkbox"> &lt;a class="link" href="https://github.com/radare/radare2" target="_blank" rel="noopener"
>Radare2&lt;/a> 逆向框架&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.frida.re/" target="_blank" rel="noopener"
>Frida&lt;/a> Hook工具&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/mwrlabs/drozer" target="_blank" rel="noopener"
>Drozer&lt;/a> Android应用程序安全评估框架&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/iBotPeaches/Apktool" target="_blank" rel="noopener"
>APKtool&lt;/a> APK逆向工具&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://portswigger.net/burp" target="_blank" rel="noopener"
>BurpSuite&lt;/a> 抓改包，安全检测&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.wireshark.org/" target="_blank" rel="noopener"
>Wireshare&lt;/a> 抓包工具&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;input checked="" disabled="" type="checkbox"> &lt;a class="link" href="https://github.com/MobSF/Mobile-Security-Framework-MobSF" target="_blank" rel="noopener"
>MobSF&lt;/a> 应用程序自动化分析框架&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;input disabled="" type="checkbox"> &lt;a class="link" href="https://github.com/androguard/androguard" target="_blank" rel="noopener"
>androguard&lt;/a> 一款基于python的逆向工程，恶意软件和软件分析Android应用程序的框架。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;input checked="" disabled="" type="checkbox"> &lt;a class="link" href="https://code.visualstudio.com/" target="_blank" rel="noopener"
>VScode&lt;/a> 编辑器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;input disabled="" type="checkbox"> &lt;a class="link" href="https://github.com/konloch/bytecode-viewer" target="_blank" rel="noopener"
>bytecode-viewer&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;input disabled="" type="checkbox"> &lt;a class="link" href="https://github.com/programa-stic/barf-project" target="_blank" rel="noopener"
>barf&amp;ndash;project&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;input checked="" disabled="" type="checkbox"> &lt;a class="link" href="https://github.com/skylot/jadx" target="_blank" rel="noopener"
>jadx&lt;/a> Dex to Java decompiler&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/xtiankisutsa/MARA_Framework" target="_blank" rel="noopener"
>MARA_Framework&lt;/a> Mobile Application Reverse engineering and Analysis Framework.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/AndroBugs/AndroBugs_Framework" target="_blank" rel="noopener"
>AndroBugs Framework&lt;/a> Android vulnerability scanner&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/linkedin/qark" target="_blank" rel="noopener"
>qark&lt;/a> Tool to look for several security related Android application vulnerabilities&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/payatu/diva-android" target="_blank" rel="noopener"
>DIVA&lt;/a> Damn Insecure and vulnerable App for Android&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/dineshshetty/Android-InsecureBankv2" target="_blank" rel="noopener"
>InsecureBankv2&lt;/a> Vulnerable Android application for developers and security enthusiasts to learn about Android insecurities&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/rafaeltoledo/android-security" target="_blank" rel="noopener"
>Android Security Sandbox&lt;/a> An app showcase of some techniques to improve Android app security&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/jackMannino/OWASP-GoatDroid-Project" target="_blank" rel="noopener"
>GoatDroid&lt;/a> A fully functional and self-contained training environment for educating developers and testers on Android security&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/tanprathan/sievePWN" target="_blank" rel="noopener"
>sievePWN&lt;/a> An android application which exploits sieve through android components.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x03-小插件">0x03 小插件&lt;/h3>
&lt;ul>
&lt;li>on_my_zsh&lt;/li>
&lt;li>&lt;a class="link" href="http://plugins.jetbrains.com/plugin/3847-findbugs-idea" target="_blank" rel="noopener"
>FindBugs-IDEA&lt;/a>&lt;/li>
&lt;li>docker&lt;/li>
&lt;/ul>
&lt;h3 id="0x04-效果图">0x04 效果图&lt;/h3></description></item><item><title>Frida从入门到放弃_2</title><link>https://ykiko.top/p/frida%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83_2/</link><pubDate>Sat, 02 Feb 2019 20:39:26 +0800</pubDate><guid>https://ykiko.top/p/frida%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83_2/</guid><description>&lt;h3 id="0x00-前言">0x00 前言&lt;/h3>
&lt;p>复习一下Android安装frida命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">adb root
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">adb push frida-server /data/local/tmp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">adb shell &lt;span class="s2">&amp;#34;chmod 755 /data/local/tmp/frida-server&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">adb shell &lt;span class="s2">&amp;#34;/data/local/tmp/frida-server &amp;amp;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>常用Frida 命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">frida-ps -U &lt;span class="c1">#列出USB设备运行ing的进程&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">frida-ps -Ua &lt;span class="c1">#列出运行中的应用&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">frida-ps -Uai &lt;span class="c1">#列出已安装的应用列表&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">frida-ps -D xxx &lt;span class="c1">#连接指定的设备&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">frida-ps -R
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#在Safari中跟踪recv*和send* API&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">frida-trace -i &lt;span class="s2">&amp;#34;recv*&amp;#34;&lt;/span> -i &lt;span class="s2">&amp;#34;send&amp;#34;&lt;/span> Safari
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#在Safari中跟踪ObjC方法调用&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">frida-trace -m &lt;span class="s2">&amp;#34;-[NSView drawRect:]&amp;#34;&lt;/span> Safari
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#在iPhone上启动SnapChat，跟踪加密API调用&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">frida-trace -U -f com.app.testing -I &lt;span class="s2">&amp;#34;libcommonCrypto*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#当程序启动时，frida跟踪所有open function&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">frida-trace -U -i open com.app.testing
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下面通过自己创建一个Android APP来学习Frida在Android上的一般用法。&lt;/p>
&lt;h3 id="0x01-简单用例">0x01 简单用例&lt;/h3>
&lt;p>Frida常用的两种启动方式：&lt;/p>
&lt;ol>
&lt;li>python 绑定启动&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">frida&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">sys&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## package name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pkg_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;com.example.xxx&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">js_hook_file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;xxx.js&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">on_message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;type&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;send&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;[*] &lt;/span>&lt;span class="si">{0}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;payload&amp;#39;&lt;/span>&lt;span class="p">]))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 插入js代码 or 加载js文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">jscode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">script&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">process&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">frida&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_usb_device&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">attach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pkg_name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">js_hook_file&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;r&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">script&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">process&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create_script&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">script&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;message&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">on_message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">script&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stdin&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Script loaded successfully &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">Java&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">perform&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">x&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//hook代码
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>直接命令加载脚本启动&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">frida -U -l xxx.js com.example.xxx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="0x02-app源码">0x02 App源码&lt;/h3>
&lt;p>java层&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>native层&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="0x03-java层hook">0x03 Java层hook&lt;/h3>
&lt;p>HOOK代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="0x04-native层hook">0x04 Native层hook&lt;/h3>
&lt;p>native层代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="0x05-总结">0x05 总结&lt;/h3>
&lt;p>源代码地址：&lt;/p>
&lt;h3 id="0x06-参考">0x06 参考&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.freebuf.com/articles/system/190565.html" target="_blank" rel="noopener"
>https://www.freebuf.com/articles/system/190565.html&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://blog.csdn.net/jiangwei0910410003/article/details/80372118" target="_blank" rel="noopener"
>https://blog.csdn.net/jiangwei0910410003/article/details/80372118&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/dweinstein/awesome-frida" target="_blank" rel="noopener"
>https://github.com/dweinstein/awesome-frida&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Frida从入门到放弃_1</title><link>https://ykiko.top/p/frida%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83_1/</link><pubDate>Tue, 22 Jan 2019 20:39:26 +0800</pubDate><guid>https://ykiko.top/p/frida%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83_1/</guid><description>&lt;h3 id="0x00-frida">0x00 Frida&lt;/h3>
&lt;p>Frida 官网：https://www.frida.re/&lt;/p>
&lt;p>github: &lt;a class="link" href="https://github.com/frida/frida" target="_blank" rel="noopener"
>https://github.com/frida/frida&lt;/a>&lt;/p>
&lt;p>Dynamic instrumentation toolkit for developers, reverse-engineers, and security
researchers.&lt;/p>
&lt;ul>
&lt;li>Scriptable&lt;/li>
&lt;li>Portable&lt;/li>
&lt;li>Free&lt;/li>
&lt;li>Battle-tested&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-安装">0x01 安装&lt;/h3>
&lt;h5 id="二进制安装-推荐">二进制安装 (推荐)&lt;/h5>
&lt;p>pip install frida-tools 就一个命令搞定&lt;/p>
&lt;blockquote>
&lt;p>Failed to load the Frida native extension: DLL load failed: 找不到指定的模块&lt;/p>
&lt;p>报了这个错 查了大半天 原来我用的版本是基于python3.7编译的。我现在用的3.6.。。。。&lt;/p>
&lt;/blockquote>
&lt;p>绑定：二选一就行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip install frida &lt;span class="c1"># Python bindings&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm install frida &lt;span class="c1"># Node.js bindings&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="手动编译">手动编译&lt;/h5>
&lt;p>依赖：&lt;/p>
&lt;p>&lt;code>pip3 install colorama prompt-toolkit pygments&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Linux&lt;/li>
&lt;/ul>
&lt;p>&lt;code>make&lt;/code>&lt;/p>
&lt;ul>
&lt;li>MacOS and iOS&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">MAC_CERTID&lt;/span>&lt;span class="o">=&lt;/span>frida-cert
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">IOS_CERTID&lt;/span>&lt;span class="o">=&lt;/span>frida-cert
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Windows&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">frida.sln &lt;span class="c1">#VS2017&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="0x02-android环境">0x02 Android环境&lt;/h3>
&lt;p>设备：小米mix2 运行Android9.0 MIUI10开发版已解锁root&lt;/p>
&lt;p>frida-server: 用的arm64版本&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/frida/frida/releases" target="_blank" rel="noopener"
>server文件下载&lt;/a>&lt;/p>
&lt;p>下载好对应的 frida-server 然后adb push 进去&lt;/p>
&lt;p>&lt;code>adb push frida-server /data/local/tmp&lt;/code>&lt;/p>
&lt;p>然后&lt;code>chomd 755 frida-server&lt;/code>修改权限&lt;/p>
&lt;p>运行&lt;code>./frida-server&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190112133452.png"
loading="lazy"
alt="frida-server"
>&lt;/p>
&lt;p>这几个命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="n">adb&lt;/span> &lt;span class="n">root&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">adb&lt;/span> &lt;span class="n">push&lt;/span> &lt;span class="nb">frida-server&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">local&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">tmp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">adb&lt;/span> &lt;span class="n">shell&lt;/span> &lt;span class="s2">&amp;#34;chmod 755 /data/local/tmp/frida-server&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">adb&lt;/span> &lt;span class="n">shell&lt;/span> &lt;span class="s2">&amp;#34;/data/local/tmp/frida-server &amp;amp;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>查看架构：&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190616145105.png"
loading="lazy"
alt="aarch64"
>&lt;/p>
&lt;h3 id="0x03-简单测试">0x03 简单测试&lt;/h3>
&lt;p>命令行运行&lt;code>frida-ps -U&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190112133604.png"
loading="lazy"
alt="frida-ps"
>&lt;/p>
&lt;p>有显示就是连接成功&lt;/p>
&lt;p>接下来对浏览器进行简单测试&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190616150349.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;code>frida-trace -U -i open com.android.browser&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190616150506.png"
loading="lazy"
>&lt;/p>
&lt;p>随便点一下浏览器&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190616150623.png"
loading="lazy"
>&lt;/p>
&lt;p>测试Diva&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190616151039.jpg"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190616151307.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;code>frida-trace -U -i &amp;quot;open*&amp;quot; jakhar.aseem.diva&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190616151432.png"
loading="lazy"
>&lt;/p>
&lt;p>进行Hook login.class checkout函数&lt;/p>
&lt;p>逆向过程略&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190616151826.png"
loading="lazy"
>&lt;/p>
&lt;p>HOOK脚本：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">Java&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">perfrom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;######&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">logActivity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Java&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;jakhar.aseem.diva.LogActivity&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">logActivity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">checkout&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">implementation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Hook&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>命令行载入脚本运行&lt;/p>
&lt;p>&lt;code>frida -U jakhar.aseem.diva -l diva1.js --no-pause&lt;/code>&lt;/p>
&lt;p>进入logging关卡 点击check out，成功hook到checkout函数。&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/20190616153553.png"
loading="lazy"
>&lt;/p>
&lt;h3 id="0x04-总结">0x04 总结&lt;/h3>
&lt;hr>
&lt;p>算是简单的入门了frida。&lt;/p>
&lt;p>frida还有很多厉害的功能。多读读官方文档，收货会更多。&lt;/p></description></item><item><title>radare2+cutter使用指南</title><link>https://ykiko.top/p/radare2-cutter%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link><pubDate>Wed, 02 Jan 2019 20:39:26 +0800</pubDate><guid>https://ykiko.top/p/radare2-cutter%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid><description>&lt;h3 id="0x00-介绍">0x00 介绍&lt;/h3>
&lt;p>&lt;a class="link" href="https://github.com/radare/radare2" target="_blank" rel="noopener"
>radare2&lt;/a> 一个很实用的二进制分析和调试工具&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/radareorg/cutter" target="_blank" rel="noopener"
>cutter&lt;/a> 是r2的GUI版。&lt;/p>
&lt;h3 id="0x01-安装">0x01 安装&lt;/h3>
&lt;p>支持的平台有如下：&lt;/p>
&lt;blockquote>
&lt;p>Windows (since XP), GNU/Linux, OS X, [Net|Free|Open]BSD,
Android, iOS, OSX, QNX, Solaris, Haiku, FirefoxOS.&lt;/p>
&lt;/blockquote>
&lt;p>Linux平台下直接&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone https://github.com/radare/radare2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> radare2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sys/install.sh //&lt;span class="o">(&lt;/span>or sys/user.sh&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Windows下可以下载二进制安装包安装。官网&lt;a class="link" href="https://www.radare.org/r/" target="_blank" rel="noopener"
>下载&lt;/a>&lt;/p>
&lt;p>Windows用户推荐使用Windows下的linux（wsl）来使用， win下更新慢。还是linux下用得舒服（方便，快捷）。&lt;/p>
&lt;h3 id="0x03-工具介绍">0x03 工具介绍&lt;/h3>
&lt;p>r2常用的包含有一下组件：&lt;/p>
&lt;ul>
&lt;li>rax2 用于数值转换&lt;/li>
&lt;li>rasm2 反汇编和汇编&lt;/li>
&lt;li>rabin2 查看文件格式&lt;/li>
&lt;li>radiff2 对文件进行 diff&lt;/li>
&lt;li>ragg2/ragg2­cc 开发shellcode工具&lt;/li>
&lt;li>rahash2 各种密码算法， hash算法&lt;/li>
&lt;li>radare2 整合了所有工具&lt;/li>
&lt;/ul>
&lt;p>使用帮助直接&lt;code>-h&lt;/code>&lt;/p>
&lt;ul>
&lt;li>rax2&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123153746.png"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>rasm2&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123153901.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://ykiko.top/E:%5c%e7%ac%94%e8%ae%b0%5cTypora%5c%e5%ad%a6%e4%b9%a0%e6%97%a5%e8%ae%b0%5cassets%5c1542959275318.png"
loading="lazy"
alt="1542959275318"
>&lt;/p>
&lt;ul>
&lt;li>rabin2&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123154355.png"
loading="lazy"
>&lt;/p>
&lt;p>eg: (&lt;code>-I&lt;/code>)&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123154422.png"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>radiff2&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123154448.png"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>ragg2/ragg2­cc&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123154514.png"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>rahash2&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123154604.png"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>radare2 (最常用) 可缩写为r2&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123155156.png"
loading="lazy"
>&lt;/p>
&lt;h3 id="0x04-r2-实战学习">0x04 r2 实战学习&lt;/h3>
&lt;p>challenge来源于：http://reversing.kr&lt;/p>
&lt;p>先查看一下文件信息：&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123155334.png"
loading="lazy"
>&lt;/p>
&lt;p>GUI?:&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123155444.png"
loading="lazy"
>&lt;/p>
&lt;p>用r2载入，自动分析&lt;code>aaa&lt;/code>命令：&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123155649.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;code>vv&lt;/code> 命令查看界面：&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123160028.png"
loading="lazy"
>&lt;/p>
&lt;p>注意0x00401080 调用了GetDlgItemTextA&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123160457.png"
loading="lazy"
>&lt;/p>
&lt;p>s 调到main函数，查看main的汇编代码：&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123160744.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123160818.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;code>pdc&lt;/code>查看伪代码：&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123161145.png"
loading="lazy"
>&lt;/p>
&lt;p>大写的&lt;code>VV&lt;/code>命令查看图形界面 使用hijk来进行界面移动。&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123161242.png"
loading="lazy"
>&lt;/p>
&lt;p>看到调用地址0x401020，s跳过去 ；发现没解析 可使用af来解析。&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123162026.png"
loading="lazy"
>&lt;/p>
&lt;p>看到GetDlgTemTextA调用：&lt;/p>
&lt;p>函数调用&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123162157.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123162302.png"
loading="lazy"
>&lt;/p>
&lt;p>差不多逻辑就是一直比对字符串，从第二位开始比最后第一位&lt;/p>
&lt;p>得到&lt;code>Ea5yR3versing&lt;/code>&lt;/p>
&lt;p>命令记不住或者想知道有些什么命令可以用就可以加个？号查询&lt;/p>
&lt;h3 id="0x05-cutter的使用">0x05 Cutter的使用&lt;/h3>
&lt;ul>
&lt;li>多图待补&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://legacy.gitbook.com/book/radare/radare2book/details" target="_blank" rel="noopener"
>Radare2 Book&lt;/a>&lt;/p></description></item><item><title>Pytorch学习_1安装</title><link>https://ykiko.top/p/pytorch%E5%AD%A6%E4%B9%A0_1%E5%AE%89%E8%A3%85/</link><pubDate>Sat, 08 Dec 2018 23:40:51 +0800</pubDate><guid>https://ykiko.top/p/pytorch%E5%AD%A6%E4%B9%A0_1%E5%AE%89%E8%A3%85/</guid><description>&lt;h3 id="前言">前言&lt;/h3>
&lt;p>本来想着用&lt;strong>tensorflow&lt;/strong>的 然而GPU版总是报各种各样的BUG&lt;/p>
&lt;p>所以打算入坑一下学pytorch&lt;/p>
&lt;p>配置：win10+i76700HQ+GTX1060+16G&lt;/p>
&lt;p>软件版本：CUDA10+python3.6+pytorch 1 源码编译&lt;/p>
&lt;p>尝试1：官方安装方法不支持 CUDA 10 太坑，社区有编译通过的，所以只有自己编译试试&lt;/p>
&lt;p>报各种异常，但是没停，那就等等&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181204002444.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181204153247.png"
loading="lazy"
>&lt;/p>
&lt;p>CPU被占满，巨卡。&lt;/p>
&lt;p>一觉起来之后：安装失败&lt;/p>
&lt;p>尝试2：等着完全支持CUDA10之后在用GPU跑吧。&lt;/p>
&lt;p>妥协：用阿里云的学生服务器装了CPU的版本：顺便把TensorFlow 也给装了。。&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181204153129.png"
loading="lazy"
>&lt;/p>
&lt;p>然而 在一个星期之后 pytorch1.0出来了 支持了CUDA10 nice&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pip3 install http://download.pytorch.org/whl/cu100/torch-1.0.0-cp36-cp36m-win_amd64.whl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip3 install torchvision
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181208233904.png"
loading="lazy"
>&lt;/p>
&lt;p>期间没有遇到任何问题 真舒畅。。。&lt;/p></description></item><item><title>PWN 小tools的使用</title><link>https://ykiko.top/p/pwn-%E5%B0%8Ftools%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Mon, 22 Oct 2018 20:39:26 +0800</pubDate><guid>https://ykiko.top/p/pwn-%E5%B0%8Ftools%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>&lt;h3 id="gcc-编译常用命令">GCC 编译常用命令&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">不带选项&lt;/th>
&lt;th>&lt;/th>
&lt;th>gcc test.c 将test.c预处理、汇编、编译并链接形成可执行文件。这里未指定输出文件，默认输出为a.out。&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">-o&lt;/td>
&lt;td>指定生成的输出文件；&lt;/td>
&lt;td>gcc test.c -o test 将test.c预处理、汇编、编译并链接形成可执行文件test。-o选项用来指定输出文件的文件名。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-E&lt;/td>
&lt;td>仅执行编译预处理；&lt;/td>
&lt;td>gcc -E test.c -o test.i 将test.c预处理输出test.i文件。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-S&lt;/td>
&lt;td>将C代码转换为汇编代码；&lt;/td>
&lt;td>gcc -S test.i 将预处理输出文件test.i汇编成test.s文件。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-c&lt;/td>
&lt;td>仅执行编译操作，不进行连接操作。&lt;/td>
&lt;td>gcc -c test.s 将汇编输出文件test.s编译输出test.o文件。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-wall&lt;/td>
&lt;td>显示警告信息；&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;strong>无选项链接&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>gcc test.o -o test 将编译输出文件test.o链接成最终可执行文件test。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-O&lt;/td>
&lt;td>使用编译优化级别1编译程序。级别为1~3，级别越大优化效果越好，但编译时间越长&lt;/td>
&lt;td>gcc -O1 test.c -o test&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;/td>
&lt;td>关掉DEP/NX（堆栈不可执行）&lt;/td>
&lt;td>gcc -z execstack -o level level.c&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;/td>
&lt;td>关掉Stack Protector/Canary（栈保护）&lt;/td>
&lt;td>gcc -fno-stack-protector -o level level.c&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;/td>
&lt;td>关掉程序ASLR/PIE（程序随机化保护）&lt;/td>
&lt;td>gcc -no-pie level level.c&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;/td>
&lt;td>64位linux下面的GCC编译出一个32位可执行程序&lt;/td>
&lt;td>gcc -m32 -z execstack -fno-stack-protector -o level level.c&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="gdb常用调试命令">GDB常用调试命令&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-C" data-lang="C">&lt;span class="line">&lt;span class="cl">&lt;span class="n">gcc&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">g&lt;/span> &lt;span class="n">main&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="c1">//在目标文件加入源代码的信息
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">gdb&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">out&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="c1">//开始调试
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="c1">//一条一条执行
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">step&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="c1">//执行下一条，如果函数进入函数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">backtrace&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">bt&lt;/span> &lt;span class="c1">//查看函数调用栈帧
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="n">locals&lt;/span> &lt;span class="c1">//查看当前栈帧局部变量
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">frame&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">f&lt;/span> &lt;span class="c1">//选择栈帧，再查看局部变量
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">print&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="c1">//打印变量的值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">finish&lt;/span> &lt;span class="c1">//运行到当前函数返回
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">set&lt;/span> &lt;span class="n">var&lt;/span> &lt;span class="n">sum&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="c1">//修改变量值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">list&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">l&lt;/span> &lt;span class="err">行号或函数名&lt;/span> &lt;span class="c1">//列出源码
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">display&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">undisplay&lt;/span> &lt;span class="n">sum&lt;/span> &lt;span class="c1">//每次停下显示变量的值/取消跟踪
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="err">行号或函数名&lt;/span> &lt;span class="c1">//设置断点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">continue&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="c1">//连续运行
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="n">breakpoints&lt;/span> &lt;span class="c1">//查看已经设置的断点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">delete&lt;/span> &lt;span class="n">breakpoints&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="c1">//删除某个断点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">disable&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">enable&lt;/span> &lt;span class="n">breakpoints&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="c1">//禁用/启用某个断点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">break&lt;/span> &lt;span class="mi">9&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">sum&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="c1">//满足条件才激活断点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">run&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">r&lt;/span> &lt;span class="c1">//重新从程序开头连续执行
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">watch&lt;/span> &lt;span class="n">input&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1">//设置观察点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="n">watchpoints&lt;/span> &lt;span class="c1">//查看设置的观察点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="n">input&lt;/span> &lt;span class="c1">//打印存储器内容，b--每个字节一组，7--7组
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">disassemble&lt;/span> &lt;span class="c1">//反汇编当前函数或指定函数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">si&lt;/span> &lt;span class="c1">// 一条指令一条指令调试 而 s 是一行一行代码
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">info&lt;/span> &lt;span class="n">registers&lt;/span> &lt;span class="c1">// 显示所有寄存器的当前值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gdb&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">20&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="n">esp&lt;/span> &lt;span class="c1">//查看内存中开始的20个数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">ni&lt;/span> &lt;span class="err">单步执行不进入&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">si&lt;/span> &lt;span class="err">单步执行并进入&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">disas&lt;/span> &lt;span class="n">addr&lt;/span> &lt;span class="err">对地址&lt;/span>&lt;span class="n">addr&lt;/span>&lt;span class="err">处的指令进行反汇编，&lt;/span>&lt;span class="n">addr&lt;/span>&lt;span class="err">可以是函数名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">checksec&lt;/span> &lt;span class="err">查看&lt;/span>&lt;span class="n">elf&lt;/span>&lt;span class="err">编译的保护选项。&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="查壳">查壳&lt;/h4>
&lt;blockquote>
&lt;p>upx -d file&lt;/p>
&lt;/blockquote>
&lt;h4 id="objjump">objjump&lt;/h4>
&lt;blockquote>
&lt;p>objdump是二进制文件快速查看工具。 常用命令：&lt;/p>
&lt;ol>
&lt;li>&lt;code>objdump -d [file]&lt;/code> 查看文件的所有汇编代码&lt;/li>
&lt;li>&lt;code>objdump -f [file]&lt;/code> 查看文件的每个文件的整体头部摘要&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>####python&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>&lt;code>python -c &amp;quot;...&amp;quot; | ./file&lt;/code> python以命令方式执行并把结果传递给file&lt;/li>
&lt;li>&lt;code>python -c &amp;quot;...&amp;quot; | xargs ./file&lt;/code> python以命令方式执行并当作命令行参数传递给file，具体的是：“它的作用是将参数列表转换成小块分段传递给其他命令，以避免参数列表过长的问题。”存在这个命令是因为很多的参数不支持以管道的方式传递。&lt;/li>
&lt;li>&lt;code>os.system()&lt;/code> 创建一个子进程&lt;/li>
&lt;li>&lt;code>os.putenv(&amp;quot;name&amp;quot;, &amp;quot;value&amp;quot;)&lt;/code> 添加一个环境变量&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;h4 id="pwntools">pwntools&lt;/h4>
&lt;blockquote>
&lt;p>参考
&lt;a class="link" href="http://pwntools.readthedocs.io/en/stable/" target="_blank" rel="noopener"
>http://pwntools.readthedocs.io/en/stable/&lt;/a> （官网介绍）&lt;/p>
&lt;p>&lt;a class="link" href="http://brieflyx.me/2015/python-module/pwntools-intro/" target="_blank" rel="noopener"
>http://brieflyx.me/2015/python-module/pwntools-intro/&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="http://brieflyx.me/2015/python-module/pwntools-advanced/" target="_blank" rel="noopener"
>http://brieflyx.me/2015/python-module/pwntools-advanced/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>一般直接用from pwn import * 或者import pwn将所有模块导入到当前命名空间，这条语句还会把os、sys等常用的系统库一并导入。&lt;/p>
&lt;p>常用的模块有下面几个：
- ==asm==:汇编与反汇编
- ==dynelf==:用于远程符号泄露，需要提供leak方法
- ==elf==:对elf文件进行操作
- ==gdb==:配合gdb进行调试
- ==memleak==:用于内存泄漏
- ==shellcraft==: shellcode的生成器
- ==tubes==:包括tubes: 包括tubes.sock, tubes.process, tubes.ssh, tubes.serialtube，分别适用于不同场景的PIPE
- ==utils==:一些实用的小功能，例如CRC计算，cyclic pattern等&lt;/p>
&lt;/blockquote>
&lt;h4 id="pwndbg">pwndbg&lt;/h4>
&lt;ul>
&lt;li>arena 堆检查&lt;/li>
&lt;li>mp 显示堆&lt;/li>
&lt;li>bins,fastbins,unsorted,smallbins,largebins&lt;/li>
&lt;li>heap&lt;/li>
&lt;li>top_chunk&lt;/li>
&lt;li>procinfo 查看当前进程状态&lt;/li>
&lt;li>rop &lt;code>rop --grep &amp;quot;pop rdi&amp;quot; -- --nojop --nosys --depth 2&lt;/code>&lt;/li>
&lt;li>search &lt;code>search -s “/bin/sh”&lt;/code>&lt;/li>
&lt;li>vvmap 虚拟内存映射&lt;/li>
&lt;li>telescope 检查内存转储&lt;/li>
&lt;/ul></description></item><item><title>QEMU的安装使用</title><link>https://ykiko.top/p/qemu%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</link><pubDate>Thu, 09 Aug 2018 19:34:34 +0800</pubDate><guid>https://ykiko.top/p/qemu%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</guid><description>&lt;h1 id="qemu的安装使用">QEMU的安装使用&lt;/h1>
&lt;h3 id="安装">安装&lt;/h3>
&lt;p>WIndows：https://qemu.weilnetz.de/w64/ 下载exe安装就行&lt;/p>
&lt;p>MACOS:&lt;code>brew install qemu&lt;/code> or &lt;code>sudo port install qemu&lt;/code>&lt;/p>
&lt;p>LINUX：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Arch:&lt;/strong> &lt;code>pacman -S qemu&lt;/code>&lt;/li>
&lt;li>&lt;strong>Debian/Ubuntu:&lt;/strong> &lt;code>apt-get install qemu&lt;/code>&lt;/li>
&lt;li>&lt;strong>Fedora:&lt;/strong> &lt;code>dnf install @virtualization&lt;/code>&lt;/li>
&lt;li>&lt;strong>Gentoo:&lt;/strong> &lt;code>emerge --ask app-emulation/qemu&lt;/code>&lt;/li>
&lt;li>&lt;strong>RHEL/CentOS:&lt;/strong> &lt;code>yum install qemu-kvm&lt;/code>&lt;/li>
&lt;li>&lt;strong>SUSE:&lt;/strong> &lt;code>zypper install qemu&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>源码安装：https://download.qemu.org/&lt;/p>
&lt;p>wget&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">wget https://download.qemu.org/qemu-3.0.0-rc1.tar.xz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar xvJf qemu-3.0.0-rc1.tar.xz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd qemu-3.0.0-rc1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>git&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-v" data-lang="v">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">git&lt;/span> &lt;span class="nv">clone&lt;/span> &lt;span class="nv">git&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="c1">//git.qemu.org/qemu.git
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nv">cd&lt;/span> &lt;span class="nv">qemu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">git&lt;/span> &lt;span class="nv">submodule&lt;/span> &lt;span class="nv">init&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">git&lt;/span> &lt;span class="nv">submodule&lt;/span> &lt;span class="nv">update&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="nv">recursive&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nv">configure&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">make&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最新的开发发生在主分支上。稳定的树位于名为“稳定x”的分支中。YY分支,X。YY是发布版本。&lt;/p>
&lt;h3 id="树莓派内核制作在windows上">树莓派内核制作（在windows上)&lt;/h3>
&lt;p>下载树莓派系统：http://downloads.raspberrypi.org/raspbian/images/&lt;/p>
&lt;p>下载qume 的树莓派内核： &lt;a class="link" href="https://github.com/dhruvvyas90/qemu-rpi-kernel" target="_blank" rel="noopener"
>https://github.com/dhruvvyas90/qemu-rpi-kernel&lt;/a> 改名为kernel-qemu放在和系统镜像同目录下&lt;/p>
&lt;p>放在了raspbia目录下&lt;/p>
&lt;p>&lt;code>qemu-system-arm.exe -kernel kernel-qemu -cpu arm1176 -m 512 -M versatilepb -dtbversatile-pb.dtb -no-reboot -append &amp;quot;root=/dev/sda2 panic=1rootfstype=ext4 rw&amp;quot; -net nic -net user,hostfwd=tcp::5022-:22 -hda 2018-06-27-raspbian-stretch.img &lt;/code>&lt;/p>
&lt;p>注意自己下载的镜像版本&lt;/p>
&lt;h3 id="linux上">Linux上&lt;/h3>
&lt;p>待补充。。。&lt;/p></description></item></channel></rss>