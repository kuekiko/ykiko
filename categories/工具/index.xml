<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>工具 on ykikoqAq</title><link>https://ykiko.top/categories/%E5%B7%A5%E5%85%B7/</link><description>Recent content in 工具 on ykikoqAq</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 28 Aug 2019 00:00:00 +0800</lastBuildDate><atom:link href="https://ykiko.top/categories/%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>qemu+gdb调试Linux内核</title><link>https://ykiko.top/p/qemu-gdb%E8%B0%83%E8%AF%95linux%E5%86%85%E6%A0%B8/</link><pubDate>Wed, 28 Aug 2019 00:00:00 +0800</pubDate><guid>https://ykiko.top/p/qemu-gdb%E8%B0%83%E8%AF%95linux%E5%86%85%E6%A0%B8/</guid><description>&lt;h1 id="qemugdb调试linux内核">qemu+gdb调试Linux内核&lt;/h1>
&lt;h3 id="前言">前言&lt;/h3>
&lt;p>调试Linux内核可以使用VM双机调试，不过使用qemu来调试会更加方便。&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;h3 id="编译源码">编译源码&lt;/h3>
&lt;p>首先到Linux &lt;a class="link" href="https://mirrors.edge.kernel.org/pub/linux/kernel/v4.x/" target="_blank" rel="noopener"
>FTP仓库&lt;/a>或者&lt;a class="link" href="https://www.kernel.org/" target="_blank" rel="noopener"
>官网&lt;/a>下载对应版本的源码。&lt;/p>
&lt;p>这里下载的是&lt;code>linux-4.10.10&lt;/code>&lt;/p>
&lt;p>解压&lt;code>tar -xvJf linux-4.10.10.tar.xz&lt;/code>&lt;/p>
&lt;p>安装依赖&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">sudo apt install build-essential ncurses-dev xz-utils libssl-dev bc fakeroot aptitude libncurses5-dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install qemu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="编译内核">编译内核&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl"> make menuconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://my-md.oss-cn-shenzhen.aliyuncs.com/20190828152106.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>进行配置：&lt;code>KernelHacking&lt;/code> —&amp;gt; &lt;code>Compile-time checks and compiler options&lt;/code>选中&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">Compile the kernel with debug info
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">Compile the kernel with frame pointers
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">Provide GDB scripts for kernel debugging
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">Processor type and features→去掉Paravirtualized guest support
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>保存退出。&lt;/p>
&lt;p>命令&lt;code>make -jN&lt;/code> 进行编译&lt;/p>
&lt;p>之后&lt;code>make all&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">make modules
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>编译完成之后，&lt;code>vmlinux&lt;/code>在源码根目录、&lt;code>bzImage&lt;/code>在&lt;code>./arch/x86/boot/&lt;/code>下&lt;/p>
&lt;h3 id="构建initramfs根文件系统">构建initramfs根文件系统&lt;/h3>
&lt;p>借助BusyBox构建极简initramfs，busybox最新版&lt;a class="link" href="https://busybox.net/downloads/" target="_blank" rel="noopener"
>下载地址&lt;/a>&lt;/p>
&lt;p>编译静态版Busybox&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">make menuconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://my-md.oss-cn-shenzhen.aliyuncs.com/20190828160608.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>设置以下选项：&lt;/p>
&lt;p>Settings -&amp;gt; Build Options -&amp;gt; Build static binary (no shared libs) 编译成静态文件&lt;/p>
&lt;p>开始编译：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">make -jNmake install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>等待编译完成源码目录下出现&lt;code>_install&lt;/code>目录，进行配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> _install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mkdir proc sys dev etc etc/init.d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> vim etc/init.d/rcS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="se">\#&lt;/span> 文件中的内容如下
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="se">\#&lt;/span> &lt;span class="c1">#!/bin/sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="se">\#&lt;/span> mount -t proc none /proc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="se">\#&lt;/span> mount -t sysfs none /sys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="se">\#&lt;/span> /sbin/mdev -s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> chmod +x etc/init.d/rcS
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>创建文件系统&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">find . &lt;span class="p">|&lt;/span> cpio -o --format&lt;span class="o">=&lt;/span>newc &amp;gt; ../rootfs.img
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="运行内核">运行内核&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">qemu-system-x86_64 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -kernel ~/linux-4.10.10/arch/x86_64/boot/bzImage &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -initrd ~/busybox-1.31.0/rootfs.img &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -append &lt;span class="s2">&amp;#34;console=ttyS0 root=/dev/ram rdinit=/sbin/init&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -cpu kvm64,+smep,+smap &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -nographic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -gdb tcp::1234
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;code>cpu kvm64,+smep,+smap&lt;/code> 设置CPU的安全选项，这里开启了smap和smep&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>kernel&lt;/code> 设置内核bzImage文件的路径&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>initrd&lt;/code> 设置刚才利用busybox创建的rootfs.img，作为内核启动的文件系统&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>gdb tcp::1234&lt;/code> 设置gdb的调试端口为1234 在GDB中通过 target remote localhist:1234进行连接&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="驱动">驱动&lt;/h3>
&lt;p>&lt;code>insmod&lt;/code> 加载驱动&lt;/p>
&lt;p>&lt;code>rmmod&lt;/code> 卸载驱动&lt;/p>
&lt;p>&lt;code>lsmod&lt;/code> 查看加载了的驱动&lt;/p>
&lt;h3 id="调试测试">调试测试&lt;/h3>
&lt;p>qemu启动，启动后的界面&lt;/p>
&lt;p>&lt;img src="https://my-md.oss-cn-shenzhen.aliyuncs.com/20190828162012.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>启动GDB&lt;/p>
&lt;p>&lt;img src="https://my-md.oss-cn-shenzhen.aliyuncs.com/20190828164008.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="https://my-md.oss-cn-shenzhen.aliyuncs.com/20190828164103.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>使用内核提供的GDB辅助调试功能：(gdb)apropos lx&lt;/p>
&lt;p>调试内核模块：add-symbol-file 添加模块文件&lt;/p>
&lt;p>断点测试 &lt;code>b cmdline_proc_show&lt;/code>&lt;/p>
&lt;p>&lt;code>cat /proc/cmdline&lt;/code> 触发断点&lt;/p>
&lt;h3 id="引用">引用&lt;/h3></description></item><item><title>Frida从入门到放弃_2(待补充)</title><link>https://ykiko.top/p/frida%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83_2%E5%BE%85%E8%A1%A5%E5%85%85/</link><pubDate>Sat, 02 Feb 2019 00:00:00 +0800</pubDate><guid>https://ykiko.top/p/frida%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83_2%E5%BE%85%E8%A1%A5%E5%85%85/</guid><description>&lt;h1 id="frida从入门到放弃_2待补充">Frida从入门到放弃_2(待补充)&lt;/h1>
&lt;h3 id="0x00-前言">0x00 前言&lt;/h3>
&lt;p>复习一下Android安装frida命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">adb root
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">adb push frida-server /data/local/tmp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">adb shell &lt;span class="s2">&amp;#34;chmod 755 /data/local/tmp/frida-server&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">adb shell &lt;span class="s2">&amp;#34;/data/local/tmp/frida-server &amp;amp;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>常用Frida 命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">frida-ps -U &lt;span class="c1">#列出USB设备运行ing的进程&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">frida-ps -Ua &lt;span class="c1">#列出运行中的应用&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">frida-ps -Uai &lt;span class="c1">#列出已安装的应用列表&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">frida-ps -D xxx &lt;span class="c1">#连接指定的设备&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">frida-ps -R
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#在Safari中跟踪recv*和send* API&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">frida-trace -i &lt;span class="s2">&amp;#34;recv*&amp;#34;&lt;/span> -i &lt;span class="s2">&amp;#34;send&amp;#34;&lt;/span> Safari
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#在Safari中跟踪ObjC方法调用&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">frida-trace -m &lt;span class="s2">&amp;#34;-[NSView drawRect:]&amp;#34;&lt;/span> Safari
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#在iPhone上启动SnapChat，跟踪加密API调用&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">frida-trace -U -f com.app.testing -I &lt;span class="s2">&amp;#34;libcommonCrypto*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#当程序启动时，frida跟踪所有open function&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">frida-trace -U -i open com.app.testing
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下面通过自己创建一个Android APP来学习Frida在Android上的一般用法。&lt;/p>
&lt;h3 id="0x01-简单用例">0x01 简单用例&lt;/h3>
&lt;p>Frida常用的两种启动方式：&lt;/p>
&lt;ol>
&lt;li>python 绑定启动&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">frida&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">sys&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## package name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pkg_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;com.example.xxx&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">js_hook_file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;xxx.js&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">on_message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;type&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;send&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;[*] &lt;/span>&lt;span class="si">{0}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;payload&amp;#39;&lt;/span>&lt;span class="p">]))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 插入js代码 or 加载js文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">jscode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">script&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">process&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">frida&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_usb_device&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">attach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pkg_name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">js_hook_file&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;r&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">script&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">process&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create_script&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">script&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;message&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">on_message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">script&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stdin&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">console.log(&amp;#34;Script loaded successfully &amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Java.perform(function x() {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //hook代码
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>直接命令加载脚本启动&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">frida -U -l xxx.js com.example.xxx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="0x02-app源码">0x02 App源码&lt;/h3>
&lt;p>java层&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>native层&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="0x03-java层hook">0x03 Java层hook&lt;/h3>
&lt;p>HOOK代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="0x04-native层hook">0x04 Native层hook&lt;/h3>
&lt;p>native层代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="0x05-总结">0x05 总结&lt;/h3>
&lt;p>源代码地址：&lt;/p>
&lt;h3 id="0x06-参考">0x06 参考&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.freebuf.com/articles/system/190565.html" target="_blank" rel="noopener"
>https://www.freebuf.com/articles/system/190565.html&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://blog.csdn.net/jiangwei0910410003/article/details/80372118" target="_blank" rel="noopener"
>https://blog.csdn.net/jiangwei0910410003/article/details/80372118&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/dweinstein/awesome-frida" target="_blank" rel="noopener"
>https://github.com/dweinstein/awesome-frida&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>radare2+cutter使用指南</title><link>https://ykiko.top/p/radare2-cutter%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link><pubDate>Wed, 02 Jan 2019 00:00:00 +0800</pubDate><guid>https://ykiko.top/p/radare2-cutter%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid><description>&lt;h1 id="radare2cutter使用指南">radare2+cutter使用指南&lt;/h1>
&lt;h3 id="0x00-介绍">0x00 介绍&lt;/h3>
&lt;p>&lt;a class="link" href="https://github.com/radare/radare2" target="_blank" rel="noopener"
>radare2&lt;/a> 一个很实用的二进制分析和调试工具&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/radareorg/cutter" target="_blank" rel="noopener"
>cutter&lt;/a> 是r2的GUI版。&lt;/p>
&lt;h3 id="0x01-安装">0x01 安装&lt;/h3>
&lt;p>支持的平台有如下：&lt;/p>
&lt;blockquote>
&lt;p>Windows (since XP), GNU/Linux, OS X, [Net|Free|Open]BSD, Android, iOS, OSX, QNX, Solaris, Haiku, FirefoxOS.&lt;/p>
&lt;/blockquote>
&lt;p>Linux平台下直接&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git clone https://github.com/radare/radare2cd radare2sys/install.sh //&lt;span class="o">(&lt;/span>or sys/user.sh&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Windows下可以下载二进制安装包安装。官网&lt;a class="link" href="https://www.radare.org/r/" target="_blank" rel="noopener"
>下载&lt;/a>&lt;/p>
&lt;p>Windows用户推荐使用Windows下的linux（wsl）来使用， win下更新慢。还是linux下用得舒服（方便，快捷）。&lt;/p>
&lt;h3 id="0x03-工具介绍">0x03 工具介绍&lt;/h3>
&lt;p>r2常用的包含有一下组件：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>rax2 用于数值转换&lt;/p>
&lt;/li>
&lt;li>
&lt;p>rasm2 反汇编和汇编&lt;/p>
&lt;/li>
&lt;li>
&lt;p>rabin2 查看文件格式&lt;/p>
&lt;/li>
&lt;li>
&lt;p>radiff2 对文件进行 diff&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ragg2/ragg2­cc 开发shellcode工具&lt;/p>
&lt;/li>
&lt;li>
&lt;p>rahash2 各种密码算法， hash算法&lt;/p>
&lt;/li>
&lt;li>
&lt;p>radare2 整合了所有工具&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>使用帮助直接&lt;code>-h&lt;/code>&lt;/p>
&lt;ul>
&lt;li>rax2&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123153746.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>rasm2&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123153901.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="https://my-md-1253484710.file.myqcloud.com/1542959275318.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>rabin2&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123154355.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>eg: (&lt;code>-I&lt;/code>)&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123154422.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>radiff2&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123154448.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>ragg2/ragg2­cc&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123154514.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>rahash2&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123154604.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>radare2 (最常用) 可缩写为r2&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123155156.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;h3 id="0x04-r2-实战学习">0x04 r2 实战学习&lt;/h3>
&lt;p>challenge来源于：http://reversing.kr&lt;/p>
&lt;p>先查看一下文件信息：&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123155334.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>GUI?:&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123155444.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>用r2载入，自动分析&lt;code>aaa&lt;/code>命令：&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123155649.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;code>vv&lt;/code> 命令查看界面：&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123160028.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>注意0x00401080 调用了GetDlgItemTextA&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123160457.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>s 调到main函数，查看main的汇编代码：&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123160744.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123160818.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;code>pdc&lt;/code>查看伪代码：&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123161145.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>大写的&lt;code>VV&lt;/code>命令查看图形界面 使用hijk来进行界面移动。&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123161242.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>看到调用地址0x401020，s跳过去 ；发现没解析 可使用af来解析。&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123162026.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>看到GetDlgTemTextA调用：&lt;/p>
&lt;p>函数调用&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123162157.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="http://my-md-1253484710.coscd.myqcloud.com/20181123162302.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>差不多逻辑就是一直比对字符串，从第二位开始比最后第一位&lt;/p>
&lt;p>得到&lt;code>Ea5yR3versing&lt;/code>&lt;/p>
&lt;p>命令记不住或者想知道有些什么命令可以用就可以加个？号查询&lt;/p>
&lt;h3 id="0x05-cutter的使用">0x05 Cutter的使用&lt;/h3>
&lt;ul>
&lt;li>多图待补&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://legacy.gitbook.com/book/radare/radare2book/details" target="_blank" rel="noopener"
>Radare2 Book&lt;/a>&lt;/p></description></item><item><title>QUME的安装使用(补充)</title><link>https://ykiko.top/p/qume%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E8%A1%A5%E5%85%85/</link><pubDate>Thu, 09 Aug 2018 00:00:00 +0800</pubDate><guid>https://ykiko.top/p/qume%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E8%A1%A5%E5%85%85/</guid><description>&lt;h1 id="qume的安装使用补充">QUME的安装使用(补充)&lt;/h1>
&lt;h1 id="qemu的安装使用">QEMU的安装使用&lt;/h1>
&lt;h3 id="安装">安装&lt;/h3>
&lt;p>WIndows：https://qemu.weilnetz.de/w64/ 下载exe安装就行&lt;/p>
&lt;p>MACOS:&lt;code>brew install qemu&lt;/code> or &lt;code>sudo port install qemu&lt;/code>&lt;/p>
&lt;p>LINUX：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Arch:&lt;/strong> &lt;code>pacman -S qemu&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Debian/Ubuntu:&lt;/strong> &lt;code>apt-get install qemu&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Fedora:&lt;/strong> &lt;code>dnf install @virtualization&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Gentoo:&lt;/strong> &lt;code>emerge --ask app-emulation/qemu&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>RHEL/CentOS:&lt;/strong> &lt;code>yum install qemu-kvm&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>SUSE:&lt;/strong> &lt;code>zypper install qemu&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>源码安装：https://download.qemu.org/&lt;/p>
&lt;p>wget&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">wget https://download.qemu.org/qemu-3.0.0-rc1.tar.xz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar xvJf qemu-3.0.0-rc1.tar.xz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd qemu-3.0.0-rc1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>git&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">git clone git://git.qemu.org/qemu.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd qemu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git submodule init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git submodule update --recursive
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最新的开发发生在主分支上。稳定的树位于名为“稳定x”的分支中。YY分支,X。YY是发布版本。&lt;/p>
&lt;h3 id="树莓派内核制作在windows上">树莓派内核制作（在windows上)&lt;/h3>
&lt;p>下载树莓派系统：http://downloads.raspberrypi.org/raspbian/images/&lt;/p>
&lt;p>下载qume 的树莓派内核： &lt;a class="link" href="https://github.com/dhruvvyas90/qemu-rpi-kernel" target="_blank" rel="noopener"
>https://github.com/dhruvvyas90/qemu-rpi-kernel&lt;/a> 改名为kernel-qemu放在和系统镜像同目录下&lt;/p>
&lt;p>放在了raspbia目录下&lt;/p>
&lt;p>&lt;code>qemu-system-arm.exe -kernel kernel-qemu -cpu arm1176 -m 512 -M versatilepb -dtbversatile-pb.dtb -no-reboot -append &amp;quot;root=/dev/sda2 panic=1rootfstype=ext4 rw&amp;quot; -net nic -net user,hostfwd=tcp::5022-:22 -hda 2018-06-27-raspbian-stretch.img&lt;/code>&lt;/p>
&lt;p>注意自己下载的镜像版本&lt;/p>
&lt;h3 id="linux上">Linux上&lt;/h3>
&lt;p>待补充。。。&lt;/p></description></item></channel></rss>